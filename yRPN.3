.TH yRPN 3 2011-Aug "linux" "heatherly custom tools manual"

.SH NAME
yRPN \- simple, clean infix to reverse polish notation conversion

.SH OVERVIEW
yRPN is a library focused solely and only on supporting high-end programs
execute calculations as quickly and unambiguously as possible.  humans work in
infix notation, e.g., "a+b", which is very intuitive.  but, it is potentially
ambiguous a computing nightmare.  reverse polish notation is clear, unambiguous,
and sequences computing very efficiently.  but, it is not very human-compatible.


.SH PROCESS
when performing this conversion, all tokens can essentially be grouped into
three classes.

.B class one.  
these are the nouns (objects) that are acted upon.  move them straight from
input to output -- no changes, no reordering, no fussing.  this list includes...
   -- keywords   : break, if, while, ...
   -- types      : short, int, extern, ...
   -- strings    : "testing", "markup", "output", ...
   -- chars      : 'a', '0', '-', ...
   -- numbers    : 56, 10.3674, 0xfe, 0b0110, 0755, ...
   -- constants  : PI, DEG2RAD, FALSE, ...
   -- variables  : a, tokens, x_pos, ...

.B class two.  
these are the verbs (actions) that act upon the nouns.  push them onto the
stack and work some magic with reordering as they come back off.  this list
includes...
   -- functions  : strcat(), yLOG_enter(), main(), ...
   -- operators  : +, /, ==, &, ...

.B class three.  
these are the grouping symbols that help alter or clarify the evaluation
sequence.  the default presedence (priority) of symbols is excellent, but
not always what you would intend.  grouping allows you to force different
evaluation orders.



.SH AUTHOR
the_heatherlys

.SH COLOPHON
this page is part of a documentation package meant to make our use of the
heatherly tools easier and faster

