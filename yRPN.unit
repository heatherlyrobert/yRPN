#===========  ===========================(purpose)======================= 
PREP          include the prototype headers                               
  incl        include main header                  yRPN.h               
  incl        include private header               yRPN_priv.h          



#==(verb)===  ===========(description)===========  =====(function)=====  ========================(arguments)=========================  ==(test)==  ==========================(results)=================================== 
SCRP          string literal interpretation                                yRPN__strings                                                                                                                                        

   COND       setup some testing variables                                                                                                                                                                          
     exec     prepare for testing                  yRPN__testquiet                                                                     i_equal     0                                                            
     code     set the compiler mode                zRPN_lang    = S_LANG_C;
     code     set the pre-processor mode           rpn.pproc    = S_PPROC_NO;

   GROUP      v21  verify correct examples                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a single string literal                                                                                                                                                                                     
     exec     load the string                      yRPN__load            "\"testing\""                                                 i_equal     9                                                                      
     exec     check the literal                    yRPN__strings         0                                                             i_equal     9                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"testing\"                                         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"testing\"                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : S                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"testing\"                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"testing\"                                         
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"testing\"                                       
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a longer string literal                                                                                                                                                                                     
     exec     load the string                      yRPN__load            "\"testing in my unit test\""                                 i_equal     25                                                                     
     exec     check the literal                    yRPN__strings         0                                                             i_equal     25                                                                     
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"testing in my unit test\"                         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"testing in my unit test\"                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : S                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"testing in my unit test\"                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"testing in my unit test\"                         
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"testing in my unit test\"                       
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a short string literal                                                                                                                                                                                      
     exec     load the string                      yRPN__load            "\"a\""                                                       i_equal     3                                                                      
     exec     check the literal                    yRPN__strings         0                                                             i_equal     3                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"a\"                                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"a\"                                               
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : S                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"a\"                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"a\"                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"a\"                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try an emtpy string literal                                                                                                                                                                                     
     exec     load the string                      yRPN__load            "\"\""                                                        i_equal     2                                                                      
     exec     check the literal                    yRPN__strings         0                                                             i_equal     2                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"\"                                                
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"\"                                                
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : S                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"\"                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"\"                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"\"                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  attempt embedded escapes                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try an embedded quote                                                                                                                                                                                           
     exec     load the string                      yRPN__load            "\"test\\\"one\""                                             i_equal     11                                                                     
     exec     check the literal                    yRPN__strings         0                                                             i_equal     11                                                                     
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"test\\\"one\"                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"test\\\"one\"                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : S                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"test\\\"one\"                                     
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"test\\\"one\"                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"test\\\"one\"                                   
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try an embedded double quote                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "\"test\\\"ing\""                                             i_equal     11                                                                     
     exec     check the literal                    yRPN__strings         0                                                             i_equal     11                                                                     
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"test\\\"ing\"                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"test\\\"ing\"                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"test\\\"ing\"                                     
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"test\\\"ing\"                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"test\\\"ing\"                                   
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try an embedded newline                                                                                                                                                                                         
     exec     load the string                      yRPN__load            "\"test\\ning\""                                              i_equal     11                                                                     
     exec     check the literal                    yRPN__strings         0                                                             i_equal     11                                                                     
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"test\\ning\"                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"test\\ning\"                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"test\\ning\"                                      
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"test\\ning\"                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"test\\ning\"                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try an embedded single quote                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "\"test'ing\""                                                i_equal     10                                                                     
     exec     check the literal                    yRPN__strings         0                                                             i_equal     10                                                                     
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"test'ing\"                                        
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"test'ing\"                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"test'ing\"                                        
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"test'ing\"                                        
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"test'ing\"                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a leading embedded double quote                                                                                                                                                                             
     exec     load the string                      yRPN__load            "\"\\\"testing\""                                             i_equal     11                                                                     
     exec     check the literal                    yRPN__strings         0                                                             i_equal     11                                                                     
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"\\\"testing\"                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"\\\"testing\"                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"\\\"testing\"                                     
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"\\\"testing\"                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"\\\"testing\"                                   
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a trailing embedded double quote                                                                                                                                                                            
     exec     load the string                      yRPN__load            "\"testing\\\"\""                                             i_equal     11                                                                     
     exec     check the literal                    yRPN__strings         0                                                             i_equal     11                                                                     
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"testing\\\"\"                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"testing\\\"\"                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"testing\\\"\"                                     
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"testing\\\"\"                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"testing\\\"\"                                   
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try embedded hex code                                                                                                                                                                                           
     exec     load the string                      yRPN__load            "\"one\\x57two\""                                             i_equal     12                                                                     
     exec     check the literal                    yRPN__strings         0                                                             i_equal     12                                                                     
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"one\\x57two\"                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"one\\x57two\"                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"one\\x57two\"                                     
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"one\\x57two\"                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"one\\x57two\"                                   
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  attempt basic mistakes                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try an integer                                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "45"                                                          i_equal     2                                                                      
     exec     check the literal                    yRPN__strings         0                                                             i_lesser    0                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :45                                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                            
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a unquoted string                                                                                                                                                                                           
     exec     load the string                      yRPN__load            "testing"                                                     i_equal     7                                                                      
     exec     check the literal                    yRPN__strings         0                                                             i_lesser    0                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :testing                                             
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                            
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       quote with no ending quote                                                                                                                                                                                      
     exec     load the string                      yRPN__load            "\"testing"                                                   i_equal     8                                                                      
     exec     check the literal                    yRPN__strings         0                                                             i_lesser    0                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"testing                                           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                            
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try literal without closing quote                                                                                                                                                                               
     exec     load the string                      yRPN__load            "\""                                                          i_equal     1                                                                      
     exec     check the literal                    yRPN__strings         0                                                             i_lesser    0                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"                                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                            
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  try harder mistakes                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try if the position is advanced                                                                                                                                                                       
     exec     load the string                      yRPN__load            "\"testing\""                                                 i_equal     9                                                            
     exec     check the type                       yRPN__strings         1                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"testing\"                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try if advanced to right start                                                                                                                                                                        
     exec     load the string                      yRPN__load            "test\"testing\""                                             i_equal     13                                                           
     exec     check the type                       yRPN__strings         4                                                             i_equal     13                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :test\"testing\"                           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"testing\"                               
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : S                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"testing\"                                       
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"testing\"                                          
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"testing\"                                        
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try on a blank load                                                                                                                                                                                   
     exec     load the string                      yRPN__load            ""                                                            i_equal     0                                                            
     exec     check the type                       yRPN__strings         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :((null))                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with the position to advanced                                                                                                                                                                     
     exec     load the string                      yRPN__load            "\"testing\""                                                 i_equal     9                                                            
     exec     check the type                       yRPN__strings         15                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"testing\"                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with a negative position                                                                                                                                                                          
     exec     load the string                      yRPN__load            "\"testing\""                                                 i_equal     9                                                            
     exec     check the type                       yRPN__strings         -5                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"testing\"                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       do a valid one again                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "\"testing\""                                                 i_equal     9                                                                      
     exec     check the literal                    yRPN__strings         0                                                             i_equal     9                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"testing\"                                         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"testing\"                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : S                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"testing\"                                       
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"testing\"                                          
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"testing\"                                        
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  find in a larger context                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       check initial spaces                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "  int short_ \"cluster vO\"id char\", \"happy\""             i_equal     42                                                           
     exec     check the type                       yRPN__strings         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ \"cluster vO\"id char\", \"happy\"     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the first entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  int short_ \"cluster vO\"id char\", \"happy\""             i_equal     42                                                           
     exec     check the type                       yRPN__strings         2                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ \"cluster vO\"id char\", \"happy\"     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the quoted entry                                                                                                                                                                                
     exec     load the string                      yRPN__load            "  int short_ \"cluster vO\"id char\", \"happy\""             i_equal     42                                                           
     exec     check the type                       yRPN__strings         13                                                            i_equal     25                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ \"cluster vO\"id char\", \"happy\"     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"cluster vO\"                            
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : S                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"cluster vO\"                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"cluster vO\"                                       
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"cluster vO\"                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the inside the first quoted entry                                                                                                                                                               
     exec     load the string                      yRPN__load            "  int short_ \"cluster vO\"id char\", \"happy\""             i_equal     42                                                           
     exec     check the type                       yRPN__strings         18                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ \"cluster vO\"id char\", \"happy\"     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the second quoted entry                                                                                                                                                                         
     exec     load the string                      yRPN__load            "  int short_ \"cluster vO\"id char\", \"happy\""             i_equal     42                                                           
     exec     check the type                       yRPN__strings         32                                                            i_equal     36                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ \"cluster vO\"id char\", \"happy\"     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\", \"
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : S                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\", \"                                            
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\", \"                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\", \"                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the third quoted entry                                                                                                                                                                          
     exec     load the string                      yRPN__load            "  int short_ \"cluster vO\"id char\", \"happy\""             i_equal     42                                                           
     exec     check the type                       yRPN__strings         35                                                            i_equal     42                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ \"cluster vO\"id char\", \"happy\"     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\"happy\"                                 
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : S                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\"happy\"                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\"happy\"                                            
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :S,\"happy\"                                          
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check after the third quoted entry                                                                                                                                                                    
     exec     load the string                      yRPN__load            "  int short_ \"cluster vO\"id char\", \"happy\""             i_equal     42                                                           
     exec     check the type                       yRPN__strings         43                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ \"cluster vO\"id char\", \"happy\"     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                     
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;



#==(verb)===  ===========(description)===========  =====(function)=====  ========================(arguments)=========================  ==(test)==  ==========================(results)=================================== 
SCRP          character literal interpretation                             yRPN__chars                                                                                                                                          

   COND       setup some testing variables                                                                                                                                                                          
     exec     prepare for testing                  yRPN__testquiet                                                                     i_equal     0                                                            
     code     set the compiler mode                zRPN_lang    = S_LANG_C;
     code     set the pre-processor mode           rpn.pproc    = S_PPROC_NO;

   GROUP      v21  verify correct examples                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try an empty character literal                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "\' \'"                                                       i_equal     3                                                                      
     exec     check the literal                    yRPN__chars           0                                                             i_equal     3                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\' \'                                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\' \'                                               
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : C                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\' \'                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\' \'                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :C,\' \'                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a single character                                                                                                                                                                                          
     exec     load the string                      yRPN__load            "\'p\'"                                                       i_equal     3                                                                      
     exec     check the literal                    yRPN__chars           0                                                             i_equal     3                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\'p\'                                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\'p\'                                               
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : C                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\'p\'                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\'p\'                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :C,\'p\'                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a number                                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "\'1\'"                                                       i_equal     3                                                                      
     exec     check the literal                    yRPN__chars           0                                                             i_equal     3                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\'1\'                                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\'1\'                                               
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : C                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\'1\'                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\'1\'                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :C,\'1\'                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a escaped tab                                                                                                                                                                                               
     exec     load the string                      yRPN__load            "\'\t\'"                                                      i_equal     3                                                                      
     exec     check the literal                    yRPN__chars           0                                                             i_equal     3                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\'\t\'                                              
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\'\t\'                                              
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : C                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\'\t\'                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\'\t\'                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :C,\'\t\'                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a symbol                                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "\'(\'"                                                       i_equal     3                                                                      
     exec     check the literal                    yRPN__chars           0                                                             i_equal     3                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\'(\'                                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\'(\'                                               
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : C                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\'(\'                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\'(\'                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :C,\'(\'                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a double quote                                                                                                                                                                                              
     exec     load the string                      yRPN__load            "\'\"\'"                                                      i_equal     3                                                                      
     exec     check the literal                    yRPN__chars           0                                                             i_equal     3                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\'\"\'                                              
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\'\"\'                                              
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : C                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\'\"\'                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\'\"\'                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :C,\'\"\'                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  attempt basic mistakes                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a one character string                                                                                                                                                                                      
     exec     load the string                      yRPN__load            "\"t\""                                                       i_equal     3                                                                      
     exec     check the literal                    yRPN__chars           0                                                             i_lesser    0                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"t\"                                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                            
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a string                                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "\"testing\""                                                 i_equal     9                                                                      
     exec     check the literal                    yRPN__chars           0                                                             i_lesser    0                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"testing\"                                         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                            
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try an empty string                                                                                                                                                                                             
     exec     load the string                      yRPN__load            "\"\""                                                        i_equal     2                                                                      
     exec     check the literal                    yRPN__chars           0                                                             i_lesser    0                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"\"                                                
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                            
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a larger number                                                                                                                                                                                             
     exec     load the string                      yRPN__load            "42"                                                          i_equal     2                                                                      
     exec     check the literal                    yRPN__chars           0                                                             i_lesser    0                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :42                                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                            
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a symbol by itself                                                                                                                                                                                          
     exec     load the string                      yRPN__load            "("                                                           i_equal     1                                                                      
     exec     check the literal                    yRPN__chars           0                                                             i_lesser    0                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :(                                                   
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                            
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  try harder mistakes                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try if the position is advanced                                                                                                                                                                       
     exec     load the string                      yRPN__load            "\'t\'"                                                       i_equal     3                                                            
     exec     check the type                       yRPN__chars           1                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\'t\'                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try if advanced to right start                                                                                                                                                                        
     exec     load the string                      yRPN__load            "vo\'t\'"                                                     i_equal     5                                                            
     exec     check the type                       yRPN__chars           2                                                             i_equal     5                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :vo\'t\'                                   
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\'t\'                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : C                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\'t\'                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\'t\'                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :C,\'t\'                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try on a blank load                                                                                                                                                                                   
     exec     load the string                      yRPN__load            ""                                                            i_equal     0                                                            
     exec     check the type                       yRPN__chars           0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :((null))                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with the position to advanced                                                                                                                                                                     
     exec     load the string                      yRPN__load            "\'t\'"                                                       i_equal     3                                                            
     exec     check the type                       yRPN__chars           15                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\'t\'                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with a negative position                                                                                                                                                                          
     exec     load the string                      yRPN__load            "\'t\'"                                                       i_equal     3                                                            
     exec     check the type                       yRPN__chars           -5                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\'t\'                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       do a valid one again                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "\'p\'"                                                       i_equal     3                                                                      
     exec     check the literal                    yRPN__chars           0                                                             i_equal     3                                                                      
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\'p\'                                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\'p\'                                               
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                                   
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : C                                                   
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\'p\'                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\'p\'                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :C,\'p\'                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  find in a larger context                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       check initial spaces                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "  int sho\'r\'t_ \'c\"luster\" vOid char\',\',"              i_equal     39                                                           
     exec     check the type                       yRPN__chars           0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int sho\'r\'t_ \'c\"luster\" vOid char\',\',      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the first entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  int sho\'r\'t_ \'c\"luster\" vOid char\',\',"              i_equal     39                                                           
     exec     check the type                       yRPN__chars           2                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int sho\'r\'t_ \'c\"luster\" vOid char\',\',      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the first char entry                                                                                                                                                                            
     exec     load the string                      yRPN__load            "  int sho\'r\'t_ \'c\"luster\" vOid char\',\',"              i_equal     39                                                           
     exec     check the type                       yRPN__chars           9                                                             i_equal     12                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int sho\'r\'t_ \'c\"luster\" vOid char\',\',      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\'r\'                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : C                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\'r\'                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\'r\'                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :C,\'r\'                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check using the second quote of first entry                                                                                                                                                           
     exec     load the string                      yRPN__load            "  int sho\'r\'t_ \'c\"luster\" vOid char\',\',"              i_equal     39                                                           
     exec     check the type                       yRPN__chars           11                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int sho\'r\'t_ \'c\"luster\" vOid char\',\',      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the second quoted entry (ends wrong)                                                                                                                                                            
     exec     load the string                      yRPN__load            "  int sho\'r\'t_ \'c\"luster\" vOid char\',\',"              i_equal     39                                                           
     exec     check the type                       yRPN__chars           15                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int sho\'r\'t_ \'c\"luster\" vOid char\',\',      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the double quoted entry                                                                                                                                                                         
     exec     load the string                      yRPN__load            "  int sho\'r\'t_ \'c\"luster\" vOid char\',\',"              i_equal     39                                                           
     exec     check the type                       yRPN__chars           17                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int sho\'r\'t_ \'c\"luster\" vOid char\',\',      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the fourth entry                                                                                                                                                                                
     exec     load the string                      yRPN__load            "  int sho\'r\'t_ \'c\"luster\" vOid char\',\',"              i_equal     39                                                           
     exec     check the type                       yRPN__chars           35                                                            i_equal     38                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int sho\'r\'t_ \'c\"luster\" vOid char\',\',      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :\',\'                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : C                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :\',\'                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :\',\'                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :C,\',\'                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check after the fifth entry                                                                                                                                                                           
     exec     load the string                      yRPN__load            "  int sho\'r\'t_ \'c\"luster\" vOid char\',\',"              i_equal     39                                                           
     exec     check the type                       yRPN__chars           38                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int sho\'r\'t_ \'c\"luster\" vOid char\',\',      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                      
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                         
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          constant name interpretation         yRPN__constants                                                                                                                                                

   COND       setup some testing variables                                                                                                                                                                          
     exec     prepare for testing                  yRPN__testquiet                                                                     i_equal     0                                                            
     code     set the compiler mode                zRPN_lang    = S_LANG_C;

   GROUP      v21  verify correct examples                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a basic contant                                                                                                                                                                                   
     exec     load the string                      yRPN__load            "PI"                                                          i_equal     2                                                            
     exec     check the literal                    yRPN__constants       0                                                             i_equal     2                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :PI                                        
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :PI                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : n                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :PI                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :PI                                                  
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :n,PI                                                
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a longer constant                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "FALSE"                                                       i_equal     5                                                            
     exec     check the literal                    yRPN__constants       0                                                             i_equal     5                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :FALSE                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :FALSE                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : n                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :FALSE                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :FALSE                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :n,FALSE                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a mixed name                                                                                                                                                                                      
     exec     load the string                      yRPN__load            "DEG2RAD"                                                     i_equal     7                                                            
     exec     check the literal                    yRPN__constants       0                                                             i_equal     7                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :DEG2RAD                                   
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :DEG2RAD                                   
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : n                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :DEG2RAD                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :DEG2RAD                                             
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :n,DEG2RAD                                           
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  attempt basic mistakes                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       misspelling                                                                                                                                                                                           
     exec     load the string                      yRPN__load            "DEB2RAD"                                                     i_equal     7                                                            
     exec     check the symbol                     yRPN__constants       0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :DEB2RAD                                   
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try leading symbol                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "$maids_a_working"                                            i_equal     16                                                           
     exec     check the symbol                     yRPN__constants       0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :$maids_a_working                          
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  try harder mistakes                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try on a blank load                                                                                                                                                                                   
     exec     load the string                      yRPN__load            ""                                                            i_equal     0                                                            
     exec     check the type                       yRPN__constants       0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :((null))                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with the position to advanced                                                                                                                                                                     
     exec     load the string                      yRPN__load            "PI"                                                          i_equal     2                                                            
     exec     check the type                       yRPN__constants       15                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :PI                                        
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with a negative position                                                                                                                                                                          
     exec     load the string                      yRPN__load            "PI"                                                          i_equal     2                                                            
     exec     check the type                       yRPN__constants       -5                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :PI                                        
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  find in a larger context                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       check initial spaces                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "  test ($PI,  5other)\"DEG2RAD,"                             i_equal    30                                                           
     exec     check the type                       yRPN__constants       0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  test ($PI,  5other)\"DEG2RAD,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the first variable entry                                                                                                                                                                        
     exec     load the string                      yRPN__load            "  test ($PI,  5other)\"DEG2RAD,"                             i_equal    30                                                           
     exec     check the type                       yRPN__constants       2                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  test ($PI,  5other)\"DEG2RAD,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check before the second entry                                                                                                                                                                         
     exec     load the string                      yRPN__load            "  test ($PI,  5other)\"DEG2RAD,"                             i_equal    30                                                           
     exec     check the type                       yRPN__constants       8                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  test ($PI,  5other)\"DEG2RAD,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check second entry                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "  test ($PI,  5other)\"DEG2RAD,"                             i_equal    30                                                           
     exec     check the type                       yRPN__constants       9                                                             i_equal     11                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  test ($PI,  5other)\"DEG2RAD,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :PI                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : n                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :PI                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :PI                                                  
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :n,PI                                                
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the quote                                                                                                                                                                                       
     exec     load the string                      yRPN__load            "  test ($PI,  5other)\"DEG2RAD,"                             i_equal    30                                                           
     exec     check the type                       yRPN__constants       21                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  test ($PI,  5other)\"DEG2RAD,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the last entry                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "  test ($PI,  5other)\"DEG2RAD,"                             i_equal    30                                                           
     exec     check the type                       yRPN__constants       22                                                            i_equal     29                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  test ($PI,  5other)\"DEG2RAD,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :DEG2RAD                                   
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : n                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :DEG2RAD                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :DEG2RAD                                             
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :n,DEG2RAD                                           
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check after the fifth entry                                                                                                                                                                           
     exec     load the string                      yRPN__load            "  test ($PI,  5other)\"DEG2RAD,"                             i_equal    30                                                           
     exec     check the type                       yRPN__constants       29                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  test ($PI,  5other)\"DEG2RAD,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;


#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          variable name interpretation         yRPN__funcvar                                                                                                                                                  

   COND       setup some testing variables                                                                                                                                                                          
     exec     prepare for testing                  yRPN__testquiet                                                                     i_equal     0                                                            
     code     set the compiler mode                zRPN_lang    = S_LANG_C;

   GROUP      v21  verify correct examples                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a single character variable                                                                                                                                                                       
     exec     load the string                      yRPN__load            "a"                                                           i_equal     1                                                            
     exec     check the literal                    yRPN__funcvar         0                                                             i_equal     1                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a                                         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :a                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : v                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :a                                                   
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,a                                                 
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a upper case single character                                                                                                                                                                     
     exec     load the string                      yRPN__load            "M"                                                           i_equal     1                                                            
     exec     check the literal                    yRPN__funcvar         0                                                             i_equal     1                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :M                                         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :M                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : v                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :M                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :M                                                   
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,M                                                 
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a short name                                                                                                                                                                                      
     exec     load the string                      yRPN__load            "len"                                                         i_equal     3                                                            
     exec     check the literal                    yRPN__funcvar         0                                                             i_equal     3                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :len                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :len                                       
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : v                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :len                                                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :len                                                 
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,len                                               
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a function name                                                                                                                                                                                   
     exec     load the string                      yRPN__load            "len()"                                                       i_equal     5                                                            
     exec     check the literal                    yRPN__funcvar         0                                                             i_equal     3                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :len()                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :len                                       
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : a                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : f                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :len                                                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : f,a,len                                              
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : fa                                                  

   COND       try a function name with one space                                                                                                                                                                    
     exec     load the string                      yRPN__load            "strlen ()"                                                   i_equal     9                                                            
     exec     check the literal                    yRPN__funcvar         0                                                             i_equal     6                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :strlen ()                                 
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :strlen                                    
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : a                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : f                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :strlen                                              
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : f,a,strlen                                           
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : fa                                                  

   COND       try a function name with lots of space                                                                                                                                                                
     exec     load the string                      yRPN__load            "strlen          ()"                                          i_equal     18                                                           
     exec     check the literal                    yRPN__funcvar         0                                                             i_equal     6                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :strlen          ()                                 
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :strlen                                    
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : a                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : f                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :strlen                                              
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : f,a,strlen                                           
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : fa                                                  

   COND       try mixed case                                                                                                                                                                                        
     exec     load the string                      yRPN__load            "zRPN_debug"                                                  i_equal     10                                                           
     exec     check the literal                    yRPN__funcvar         0                                                             i_equal     10                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :zRPN_debug                                
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :zRPN_debug                                
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : v                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :zRPN_debug                                          
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :zRPN_debug                                          
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,zRPN_debug                                        
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with single character in expression                                                                                                                                                               
     exec     load the string                      yRPN__load            "a+b"                                                         i_equal     3                                                            
     exec     check the symbol                     yRPN__funcvar         0                                                             i_equal     1                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a+b                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :a                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : v                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :a                                                   
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,a                                                 
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with single character before whitespace                                                                                                                                                           
     exec     load the string                      yRPN__load            "a + b"                                                       i_equal     5                                                            
     exec     check the symbol                     yRPN__funcvar         0                                                             i_equal     1                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a + b                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :a                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : v                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :a                                                   
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,a                                                 
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with embedded symbol                                                                                                                                                                              
     exec     load the string                      yRPN__load            "unit$test"                                                   i_equal     9                                                            
     exec     check the literal                    yRPN__funcvar         0                                                             i_equal     4                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :unit$test                                 
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :unit                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : v                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :unit                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :unit                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,unit                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with embedded number                                                                                                                                                                              
     exec     load the string                      yRPN__load            "unit42test"                                                  i_equal     10                                                           
     exec     check the literal                    yRPN__funcvar         0                                                             i_equal     10                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :unit42test                                
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :unit42test                                
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : v                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :unit42test                                          
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :unit42test                                          
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,unit42test                                        
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try leading underscore                                                                                                                                                                                
     exec     load the string                      yRPN__load            "_underscore"                                                 i_equal     11                                                           
     exec     check the symbol                     yRPN__funcvar         0                                                             i_equal     11                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :_underscore                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :_underscore                               
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : v                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :_underscore                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :_underscore                                         
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,_underscore                                       
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  attempt basic mistakes                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try leading number                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "9maids_a_working"                                            i_equal     16                                                           
     exec     check the symbol                     yRPN__funcvar         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :9maids_a_working                          
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try leading symbol                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "$maids_a_working"                                            i_equal     16                                                           
     exec     check the symbol                     yRPN__funcvar         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :$maids_a_working                          
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  try harder mistakes                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try on a blank load                                                                                                                                                                                   
     exec     load the string                      yRPN__load            ""                                                            i_equal     0                                                            
     exec     check the type                       yRPN__funcvar         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :((null))                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with the position to advanced                                                                                                                                                                     
     exec     load the string                      yRPN__load            "void"                                                        i_equal     4                                                            
     exec     check the type                       yRPN__funcvar         15                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :void                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with a negative position                                                                                                                                                                          
     exec     load the string                      yRPN__load            "void"                                                        i_equal     4                                                            
     exec     check the type                       yRPN__funcvar         -5                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :void                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  find in a larger context                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       check initial spaces                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "  tsty ($next 5other)\"and yes,"                             i_equal    30                                                           
     exec     check the type                       yRPN__funcvar         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  tsty ($next 5other)\"and yes,            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the first entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  tsty ($next 5other)\"and yes,"                             i_equal    30                                                           
     exec     check the type                       yRPN__funcvar         2                                                             i_equal     6                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  tsty ($next 5other)\"and yes,            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :tsty                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : a                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : f                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :tsty                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : f,a,tsty                                            
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : fa                                                  

   COND       check before the second entry                                                                                                                                                                         
     exec     load the string                      yRPN__load            "  tsty ($next 5other)\"and yes,"                             i_equal    30                                                           
     exec     check the type                       yRPN__funcvar         8                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  tsty ($next 5other)\"and yes,            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check second entry                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "  tsty ($next 5other)\"and yes,"                             i_equal    30                                                           
     exec     check the type                       yRPN__funcvar         9                                                             i_equal     13                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  tsty ($next 5other)\"and yes,            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :next                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : v                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :next                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :next                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,next                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the just before third entry                                                                                                                                                                     
     exec     load the string                      yRPN__load            "  tsty ($next 5other)\"and yes,"                             i_equal    30                                                           
     exec     check the type                       yRPN__funcvar         14                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  tsty ($next 5other)\"and yes,            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the third entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  tsty ($next 5other)\"and yes,"                             i_equal    30                                                           
     exec     check the type                       yRPN__funcvar         15                                                            i_equal     20                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  tsty ($next 5other)\"and yes,            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :other                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : v                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :other                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :other                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,other                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the quote                                                                                                                                                                                       
     exec     load the string                      yRPN__load            "  tsty ($next 5other)\"and yes,"                             i_equal    30                                                           
     exec     check the type                       yRPN__funcvar         21                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  tsty ($next 5other)\"and yes,            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the last entry                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "  tsty ($next 5other)\"and yes,"                             i_equal    30                                                           
     exec     check the type                       yRPN__funcvar         26                                                            i_equal     29                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  tsty ($next 5other)\"and yes,            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :yes                                       
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : v                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :yes                                                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :yes                                                 
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,yes                                               
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check after the fifth entry                                                                                                                                                                           
     exec     load the string                      yRPN__load            "  tsty ($next 5other)\"and yes,"                             i_equal    30                                                           
     exec     check the type                       yRPN__funcvar         29                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  tsty ($next 5other)\"and yes,            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          c data type interpretation           yRPN__types                                                                                                                                                    

   COND       setup some testing variables                                                                                                                                                                          
     exec     prepare for testing                  yRPN__testquiet                                                                     i_equal     0                                                            
     code     set the compiler mode                zRPN_lang    = S_LANG_C;

   GROUP      v21  verify correct examples                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a very basic type                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "int"                                                         i_equal     3                                                            
     exec     check the type                       yRPN__types           0                                                             i_equal     3                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :int                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :int                                       
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : t                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :int                                                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :int                                                 
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :t,int                                               
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try another basic type                                                                                                                                                                                
     exec     load the string                      yRPN__load            "char"                                                        i_equal     4                                                            
     exec     check the type                       yRPN__types           0                                                             i_equal     4                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :char                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :char                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : t                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :char                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :char                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :t,char                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a modifier                                                                                                                                                                                        
     exec     load the string                      yRPN__load            "signed"                                                      i_equal     6                                                            
     exec     check the type                       yRPN__types           0                                                             i_equal     6                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :signed                                    
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :signed                                    
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : t                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :signed                                              
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :signed                                              
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :t,signed                                            
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a storage class                                                                                                                                                                                   
     exec     load the string                      yRPN__load            "const"                                                       i_equal     5                                                            
     exec     check the type                       yRPN__types           0                                                             i_equal     5                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :const                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :const                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : t                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :const                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :const                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :t,const                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  attempt basic mistakes                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a spelled out type (error)                                                                                                                                                                        
     exec     load the string                      yRPN__load            "integer"                                                     i_equal     7                                                            
     exec     check the type                       yRPN__types           0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :integer                                   
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a shorten type name (error)                                                                                                                                                                       
     exec     load the string                      yRPN__load            "chr"                                                         i_equal     3                                                            
     exec     check the type                       yRPN__types           0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :chr                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try another valid type                                                                                                                                                                                
     exec     load the string                      yRPN__load            "void"                                                        i_equal     4                                                            
     exec     check the type                       yRPN__types           0                                                             i_equal     4                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :void                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :void                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : t                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :void                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :void                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :t,void                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  try harder mistakes                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try if the position is advanced                                                                                                                                                                       
     exec     load the string                      yRPN__load            "void"                                                        i_equal     4                                                            
     exec     check the type                       yRPN__types           1                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :void                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try if advanced to right start                                                                                                                                                                        
     exec     load the string                      yRPN__load            "vovoid"                                                      i_equal     6                                                            
     exec     check the type                       yRPN__types           2                                                             i_equal     6                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :vovoid                                    
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :void                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : t                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :void                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :void                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :t,void                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try on a blank load                                                                                                                                                                                   
     exec     load the string                      yRPN__load            ""                                                            i_equal     0                                                            
     exec     check the type                       yRPN__types           0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :((null))                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with the position to advanced                                                                                                                                                                     
     exec     load the string                      yRPN__load            "void"                                                        i_equal     4                                                            
     exec     check the type                       yRPN__types           15                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :void                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with a negative position                                                                                                                                                                          
     exec     load the string                      yRPN__load            "void"                                                        i_equal     4                                                            
     exec     check the type                       yRPN__types           -5                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :void                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try in spreadsheet mode                                                                                                                                                                               
     exec     load the string                      yRPN__load            "void"                                                        i_equal     4                                                            
     code     set the mode to spreadsheet          zRPN_lang    = S_LANG_GYGES;
     exec     check the type                       yRPN__types           0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :void                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       do a valid one again                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "void"                                                        i_equal     4                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;
     exec     check the type                       yRPN__types           0                                                             i_equal     4                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :void                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :void                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : t                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :void                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :void                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :t,void                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  find in a larger context                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       check initial spaces                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "  int short_ cluster vOid char,"                             i_equal     31                                                           
     exec     check the type                       yRPN__types           0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ cluster vOid char,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the first entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  int short_ cluster vOid char,"                             i_equal     31                                                           
     exec     check the type                       yRPN__types           2                                                             i_equal     5                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ cluster vOid char,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :int                                       
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : t                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :int                                                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :int                                                 
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :t,int                                               
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the second entry                                                                                                                                                                                
     exec     load the string                      yRPN__load            "  int short_ cluster vOid char,"                             i_equal     31                                                           
     exec     check the type                       yRPN__types           6                                                             i_equal     11                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ cluster vOid char,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :short                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : t                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :short                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :short                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :t,short                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the just before third entry                                                                                                                                                                     
     exec     load the string                      yRPN__load            "  int short_ cluster vOid char,"                             i_equal     31                                                           
     exec     check the type                       yRPN__types           11                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ cluster vOid char,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the third entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  int short_ cluster vOid char,"                             i_equal     31                                                           
     exec     check the type                       yRPN__types           13                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ cluster vOid char,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the fourth entry                                                                                                                                                                                
     exec     load the string                      yRPN__load            "  int short_ cluster vOid char,"                             i_equal     31                                                           
     exec     check the type                       yRPN__types           21                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ cluster vOid char,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the fifth entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  int short_ cluster vOid char,"                             i_equal     31                                                           
     exec     check the type                       yRPN__types           26                                                            i_equal     30                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ cluster vOid char,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :char                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : t                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :char                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :char                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :t,char                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check after the fifth entry                                                                                                                                                                           
     exec     load the string                      yRPN__load            "  int short_ cluster vOid char,"                             i_equal     31                                                           
     exec     check the type                       yRPN__types           29                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  int short_ cluster vOid char,           
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          c keyword interpretation             yRPN__keywords                                                                                                                                                 

   COND       setup some testing variables                                                                                                                                                                          
     exec     prepare for testing                  yRPN__testquiet                                                                     i_equal     0                                                            
     code     set the compiler mode                zRPN_lang    = S_LANG_C;

   GROUP      v21  verify correct examples                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a common keyword                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "if"                                                          i_equal     2                                                            
     exec     check the type                       yRPN__keywords        0                                                             i_equal     2                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :if                                        
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :if                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : k                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :if                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :if                                                  
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :k,if                                                
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try another common keyword                                                                                                                                                                            
     exec     load the string                      yRPN__load            "while"                                                       i_equal     5                                                            
     exec     check the type                       yRPN__keywords        0                                                             i_equal     5                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :while                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :while                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : k                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :while                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :while                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :k,while                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a funkier one                                                                                                                                                                                     
     exec     load the string                      yRPN__load            "switch"                                                      i_equal     6                                                            
     exec     check the type                       yRPN__keywords        0                                                             i_equal     6                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :switch                                    
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :switch                                    
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : k                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :switch                                              
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :switch                                              
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :k,switch                                            
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a repeating one                                                                                                                                                                                   
     exec     load the string                      yRPN__load            "case"                                                        i_equal     4                                                            
     exec     check the type                       yRPN__keywords        0                                                             i_equal     4                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :case                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :case                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : k                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :case                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :case                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :k,case                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  attempt basic mistakes                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a misspelled one (error)                                                                                                                                                                          
     exec     load the string                      yRPN__load            "braek"                                                       i_equal     5                                                            
     exec     check the type                       yRPN__keywords        0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :braek                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a keyword within a larger word (error)                                                                                                                                                            
     exec     load the string                      yRPN__load            "iff"                                                         i_equal     3                                                            
     exec     check the type                       yRPN__keywords        0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :iff                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try another valid type                                                                                                                                                                                
     exec     load the string                      yRPN__load            "continue"                                                    i_equal     8                                                            
     exec     check the type                       yRPN__keywords        0                                                             i_equal     8                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :continue                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :continue                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : k                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :continue                                            
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :continue                                            
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :k,continue                                          
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  try harder mistakes                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try if the position is advanced                                                                                                                                                                       
     exec     load the string                      yRPN__load            "continue"                                                    i_equal     8                                                            
     exec     check the type                       yRPN__keywords        1                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :continue                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try if advanced to right start                                                                                                                                                                        
     exec     load the string                      yRPN__load            "iif"                                                         i_equal     3                                                            
     exec     check the type                       yRPN__keywords        1                                                             i_equal     3                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :iif                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :if                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : k                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :if                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :if                                                  
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :k,if                                                
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try on a blank load                                                                                                                                                                                   
     exec     load the string                      yRPN__load            ""                                                            i_equal     0                                                            
     exec     check the type                       yRPN__keywords        0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :((null))                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with the position to advanced                                                                                                                                                                     
     exec     load the string                      yRPN__load            "continue"                                                    i_equal     8                                                            
     exec     check the type                       yRPN__keywords        15                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :continue                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with a negative position                                                                                                                                                                          
     exec     load the string                      yRPN__load            "continue"                                                    i_equal     8                                                            
     exec     check the type                       yRPN__keywords        -5                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :continue                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try in spreadsheet mode                                                                                                                                                                               
     exec     load the string                      yRPN__load            "continue"                                                    i_equal     8                                                            
     code     set the mode to spreadsheet          zRPN_lang    = S_LANG_GYGES;
     exec     check the type                       yRPN__keywords        0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :continue                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       repeat same in c language mode                                                                                                                                                                        
     exec     load the string                      yRPN__load            "continue"                                                    i_equal     8                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;
     exec     check the type                       yRPN__keywords        0                                                             i_equal     8                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :continue                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :continue                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : k                                         

   GROUP      v21  find in a larger context                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       check initial spaces                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "  break case/  tuesday cOntinue if,"                         i_equal     35                                                           
     exec     check the type                       yRPN__keywords        0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  break case/  tuesday cOntinue if,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the first entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  break case/  tuesday cOntinue if,"                         i_equal     35                                                           
     exec     check the type                       yRPN__keywords        2                                                             i_equal     7                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  break case/  tuesday cOntinue if,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :break                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : k                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :break                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :break                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :k,break                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the second entry                                                                                                                                                                                
     exec     load the string                      yRPN__load            "  break case/  tuesday cOntinue if,"                         i_equal     35                                                           
     exec     check the type                       yRPN__keywords        8                                                             i_equal     12                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  break case/  tuesday cOntinue if,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :case                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : k                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :case                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :case                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :k,case                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the just before third entry                                                                                                                                                                     
     exec     load the string                      yRPN__load            "  break case/  tuesday cOntinue if,"                         i_equal     35                                                           
     exec     check the type                       yRPN__keywords        14                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  break case/  tuesday cOntinue if,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the third entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  break case/  tuesday cOntinue if,"                         i_equal     35                                                           
     exec     check the type                       yRPN__keywords        15                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  break case/  tuesday cOntinue if,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the fourth entry                                                                                                                                                                                
     exec     load the string                      yRPN__load            "  break case/  tuesday cOntinue if,"                         i_equal     35                                                           
     exec     check the type                       yRPN__keywords        23                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  break case/  tuesday cOntinue if,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the fifth entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  break case/  tuesday cOntinue if,"                         i_equal     35                                                           
     exec     check the type                       yRPN__keywords        32                                                            i_equal     34                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  break case/  tuesday cOntinue if,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :if                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : k                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :if                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :if                                                  
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :k,if                                                
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check after the fifth entry                                                                                                                                                                           
     exec     load the string                      yRPN__load            "  break case/  tuesday cOntinue if,"                         i_equal     35                                                           
     exec     check the type                       yRPN__keywords        24                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  break case/  tuesday cOntinue if,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          integer and float interpretation     yRPN__numbers                                                                                                                                                  

   COND       setup some testing variables                                                                                                                                                                          
     exec     prepare for testing                  yRPN__testquiet                                                                     i_equal     0                                                            
     code     set the compiler mode                zRPN_lang    = S_LANG_C;

   GROUP      v21  verify correct examples                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a single digit integer                                                                                                                                                                            
     exec     load the string                      yRPN__load            "1"                                                           i_equal     1                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     1                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :1                                         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :1                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : I                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :1                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :1                                                   
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :I,1                                                 
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a multiple digit integer                                                                                                                                                                          
     exec     load the string                      yRPN__load            "942"                                                         i_equal     3                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     3                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :942                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :942                                       
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : I                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :942                                                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :942                                                 
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :I,942                                               
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a long integer                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "1234567890123456789"                                         i_equal     19                                                           
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     19                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :1234567890123456789                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :1234567890123456789                       
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : I                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :1234567890123456789                                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :1234567890123456789                                 
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :I,1234567890123456789                               
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a floating point with leading zero                                                                                                                                                                
     exec     load the string                      yRPN__load            "0.987"                                                       i_equal     5                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     5                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0.987                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0.987                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : F                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0.987                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0.987                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :F,0.987                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a floating point with more non-decimals                                                                                                                                                           
     exec     load the string                      yRPN__load            "10.87"                                                       i_equal     5                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     5                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :10.87                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :10.87                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : F                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :10.87                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :10.87                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :F,10.87                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a lone zero                                                                                                                                                                                       
     exec     load the string                      yRPN__load            "0"                                                           i_equal     1                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     1                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0                                         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : I                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0                                                   
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :I,0                                                 
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  attempt basic mistakes                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try variable name                                                                                                                                                                                     
     exec     load the string                      yRPN__load            "len"                                                         i_equal     3                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :len                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try string literal                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "\"testing\""                                                 i_equal     9                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"testing\"                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try starting with a decimal                                                                                                                                                                           
     exec     load the string                      yRPN__load            ".1525"                                                       i_equal     5                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :.1525                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try ending with a decimal                                                                                                                                                                             
     exec     load the string                      yRPN__load            "1200."                                                       i_equal     5                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :1200.                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try two decimals                                                                                                                                                                                      
     exec     load the string                      yRPN__load            "15.2.5"                                                      i_equal     6                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :15.2.5                                    
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try commas                                                                                                                                                                                            
     exec     load the string                      yRPN__load            "6,300"                                                       i_equal     5                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     1                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :6,300                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :6                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : I                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :6                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :6                                                   
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :I,6                                                 
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try lead zeros on integer                                                                                                                                                                             
     exec     load the string                      yRPN__load            "03678"                                                       i_equal     5                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     4                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :03678                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0367                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : O                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0367                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0367                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :O,0367                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  try harder mistakes                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify this works                                                                                                                                                                                     
     exec     load the string                      yRPN__load            "0.345678"                                                    i_equal     8                                                            
     exec     check the type                       yRPN__numbers         0                                                             i_equal     8                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0.345678                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0.345678                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : F                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0.345678                                            
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0.345678                                            
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :F,0.345678                                          
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try if the position is advanced                                                                                                                                                                       
     exec     load the string                      yRPN__load            "0.345678"                                                    i_equal     8                                                            
     exec     check the type                       yRPN__numbers         1                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0.345678                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try if advanced to right start                                                                                                                                                                        
     exec     load the string                      yRPN__load            "iif0.345678"                                                 i_equal     11                                                           
     exec     check the type                       yRPN__numbers         3                                                             i_equal     11                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :iif0.345678                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0.345678                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : F                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0.345678                                            
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0.345678                                            
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :F,0.345678                                          
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try on a blank load                                                                                                                                                                                   
     exec     load the string                      yRPN__load            ""                                                            i_equal     0                                                            
     exec     check the type                       yRPN__numbers         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :((null))                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with the position to advanced                                                                                                                                                                     
     exec     load the string                      yRPN__load            "0.345678"                                                    i_equal     8                                                            
     exec     check the type                       yRPN__numbers         15                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0.345678                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with a negative position                                                                                                                                                                          
     exec     load the string                      yRPN__load            "0.345678"                                                    i_equal     8                                                            
     exec     check the type                       yRPN__numbers         -5                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0.345678                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  find in a larger context                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       check initial spaces                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "  34eak 0.3456 tu0sday c\"10.1e 5.,"                         i_equal     34                                                           
     exec     check the type                       yRPN__numbers         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  34eak 0.3456 tu0sday c\"10.1e 5.,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the first entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  34eak 0.3456 tu0sday c\"10.1e 5.,"                         i_equal     34                                                           
     exec     check the type                       yRPN__numbers         2                                                             i_equal     4                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  34eak 0.3456 tu0sday c\"10.1e 5.,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :34                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : I                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :34                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :34                                                  
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :I,34                                                
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the just before second entry                                                                                                                                                                    
     exec     load the string                      yRPN__load            "  34eak 0.3456 tu0sday c\"10.1e 5.,"                         i_equal     34                                                           
     exec     check the type                       yRPN__numbers         7                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  34eak 0.3456 tu0sday c\"10.1e 5.,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the second entry                                                                                                                                                                                
     exec     load the string                      yRPN__load            "  34eak 0.3456 tu0sday c\"10.1e 5.,"                         i_equal     34                                                           
     exec     check the type                       yRPN__numbers         8                                                             i_equal     14                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  34eak 0.3456 tu0sday c\"10.1e 5.,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0.3456                                    
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : F                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0.3456                                              
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0.3456                                              
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :F,0.3456                                            
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the just before third entry                                                                                                                                                                     
     exec     load the string                      yRPN__load            "  34eak 0.3456 tu0sday c\"10.1e 5.,"                         i_equal     34                                                           
     exec     check the type                       yRPN__numbers         16                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  34eak 0.3456 tu0sday c\"10.1e 5.,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the third entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  34eak 0.3456 tu0sday c\"10.1e 5.,"                         i_equal     34                                                           
     exec     check the type                       yRPN__numbers         17                                                            i_equal     18                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  34eak 0.3456 tu0sday c\"10.1e 5.,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : I                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0                                                   
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :I,0                                                 
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the fourth entry                                                                                                                                                                                
     exec     load the string                      yRPN__load            "  34eak 0.3456 tu0sday c\"10.1e 5.,"                         i_equal     34                                                           
     exec     check the type                       yRPN__numbers         25                                                            i_equal     29                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  34eak 0.3456 tu0sday c\"10.1e 5.,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :10.1                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : F                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :10.1                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :10.1                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :F,10.1                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the fifth entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "  34eak 0.3456 tu0sday c\"10.1e 5.,"                         i_equal     34                                                           
     exec     check the type                       yRPN__numbers         31                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :  34eak 0.3456 tu0sday c\"10.1e 5.,       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          special number base interpretation   yRPN__numbers                                                                                                                                                  

   COND       setup some testing variables                                                                                                                                                                          
     exec     prepare for testing                  yRPN__testquiet                                                                     i_equal     0                                                            
     code     set the compiler mode                zRPN_lang    = S_LANG_C;

   GROUP      v21  verify correct examples                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a hexidecimal constant                                                                                                                                                                            
     exec     load the string                      yRPN__load            "0x10"                                                        i_equal     4                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     4                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0x10                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0x10                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : X                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0x10                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0x10                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :X,0x10                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a hexidecimal with letters too                                                                                                                                                                    
     exec     load the string                      yRPN__load            "0xacF029e"                                                   i_equal     9                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     9                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0xacF029e                                 
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0xacF029e                                 
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : X                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0xacF029e                                           
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0xacF029e                                           
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :X,0xacF029e                                         
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try an octal constant                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "0755"                                                        i_equal     4                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     4                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0755                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0755                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : O                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0755                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0755                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :O,0755                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a short octal                                                                                                                                                                                     
     exec     load the string                      yRPN__load            "02"                                                          i_equal     2                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     2                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :02                                        
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :02                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : O                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :02                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :02                                                  
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :O,02                                                
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try an octal with prefix                                                                                                                                                                              
     exec     load the string                      yRPN__load            "0o712"                                                       i_equal     5                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     5                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0o712                                     
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0o712                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : O                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0o712                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0o712                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :O,0o712                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a binary constant                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "0b10"                                                        i_equal     4                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     4                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0b10                                      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0b10                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : B                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0b10                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0b10                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :B,0b10                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a binary constant that is longer                                                                                                                                                                  
     exec     load the string                      yRPN__load            "0b1011011"                                                   i_equal     9                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     9                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0b1011011                                 
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0b1011011                                 
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : B                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0b1011011                                           
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0b1011011                                           
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :B,0b1011011                                         
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  attempt basic mistakes                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a hexidecimal without leading zero                                                                                                                                                                
     exec     load the string                      yRPN__load            "x10"                                                         i_equal     3                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :x10                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a hexidecimal with a bad letter (cut off)                                                                                                                                                         
     exec     load the string                      yRPN__load            "0xacG029e"                                                   i_equal     9                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     4                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0xacG029e                                 
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0xac                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : X                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0xac                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0xac                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :X,0xac                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a binary constant with a bad digit (cut off)                                                                                                                                                      
     exec     load the string                      yRPN__load            "0b1012011"                                                   i_equal     9                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     5                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0b1012011                                 
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0b101                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : B                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0b101                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0b101                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :B,0b101                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a binary constant with no payload                                                                                                                                                                 
     exec     load the string                      yRPN__load            "0b"                                                          i_equal     2                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0b                                        
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a bad inticator                                                                                                                                                                                   
     exec     load the string                      yRPN__load            "0w23546"                                                     i_equal     7                                                            
     exec     check the literal                    yRPN__numbers         0                                                             i_equal     1                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :0w23546                                   
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : I                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0                                                   
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :I,0                                                 
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  find in a larger context                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       check initial spaces                                                                                                                                                                                  
     exec     load the string                      yRPN__load            " 034eak 0b10110z tu0oday c\"0xa1e 5."                        i_equal     35                                                           
     exec     check the type                       yRPN__numbers         0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 034eak 0b10110z tu0oday c\"0xa1e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the first entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            " 034eak 0b10110z tu0oday c\"0xa1e 5."                        i_equal     35                                                           
     exec     check the type                       yRPN__numbers         1                                                             i_equal     4                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 034eak 0b10110z tu0oday c\"0xa1e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :034                                       
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : O                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :034                                                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :034                                                 
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :O,034                                               
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the just into second entry                                                                                                                                                                      
     exec     load the string                      yRPN__load            " 034eak 0b10110z tu0oday c\"0xa1e 5."                        i_equal     35                                                           
     exec     check the type                       yRPN__numbers         10                                                            i_equal     15                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 034eak 0b10110z tu0oday c\"0xa1e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :10110                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : I                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :10110                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :10110                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :I,10110                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the further into second entry                                                                                                                                                                   
     exec     load the string                      yRPN__load            " 034eak 0b10110z tu0oday c\"0xa1e 5."                        i_equal     35                                                           
     exec     check the type                       yRPN__numbers         11                                                            i_equal     15                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 034eak 0b10110z tu0oday c\"0xa1e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0110                                      
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : O                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0110                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0110                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :O,0110                                              
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the second entry                                                                                                                                                                                
     exec     load the string                      yRPN__load            " 034eak 0b10110z tu0oday c\"0xa1e 5."                        i_equal     35                                                           
     exec     check the type                       yRPN__numbers         8                                                             i_equal     15                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 034eak 0b10110z tu0oday c\"0xa1e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0b10110                                   
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : B                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0b10110                                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0b10110                                             
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :B,0b10110                                           
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the just before third entry                                                                                                                                                                     
     exec     load the string                      yRPN__load            " 034eak 0b10110z tu0oday c\"0xa1e 5."                        i_equal     35                                                           
     exec     check the type                       yRPN__numbers         26                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 034eak 0b10110z tu0oday c\"0xa1e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the third entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            " 034eak 0b10110z tu0oday c\"0xa1e 5."                        i_equal     35                                                           
     exec     check the type                       yRPN__numbers         27                                                            i_equal     32                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 034eak 0b10110z tu0oday c\"0xa1e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0xa1e                                     
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : X                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :0xa1e                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 1                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :0xa1e                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :X,0xa1e                                             
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the fourth entry                                                                                                                                                                                
     exec     load the string                      yRPN__load            " 034eak 0b10110z tu0oday c\"0xa1e 5."                        i_equal     35                                                           
     exec     check the type                       yRPN__numbers         33                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 034eak 0b10110z tu0oday c\"0xa1e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          operator intrepratation              yRPN__operators                                                                                                                                                

   COND       setup some testing variables                                                                                                                                                                          
     exec     prepare for testing                  yRPN__testquiet                                                                     i_equal     0                                                            
     code     set the compiler mode                zRPN_lang    = S_LANG_C;

   GROUP      v21  verify correct examples                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a simple operator                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "/"                                                           i_equal     1                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the operator                   yRPN__operators       0                                                             i_equal     1                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :/                                         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :/                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : g                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :/                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,g,/                                               
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : og                                                  

   COND       try a boolean operator                                                                                                                                                                                
     exec     load the string                      yRPN__load            "<"                                                           i_equal     1                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the operator                   yRPN__operators       0                                                             i_equal     1                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :<                                         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :<                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : j                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :<                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,j,<                                               
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : oj                                                  

   COND       try a two character operator                                                                                                                                                                          
     exec     load the string                      yRPN__load            "--"                                                          i_equal     2                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the operator                   yRPN__operators       0                                                             i_equal     2                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :--                                        
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    ::-                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : e                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     ::-                                                        
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,e,:-                                              
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : oe                                                  

   COND       try a equality                                                                                                                                                                                        
     exec     load the string                      yRPN__load            "=="                                                          i_equal     2                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the operator                   yRPN__operators       0                                                             i_equal     2                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :==                                        
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :==                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : k                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :==                                                        
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,k,==                                              
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : ok                                                  

   COND       try assignment                                                                                                                                                                                        
     exec     load the string                      yRPN__load            "="                                                           i_equal     1                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the operator                   yRPN__operators       0                                                             i_equal     1                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :=                                         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :=                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : r                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :=                                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,r,=                                               
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : or                                                  

   GROUP      v21  attempt basic mistakes                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try variable name                                                                                                                                                                                     
     exec     load the string                      yRPN__load            "len"                                                         i_equal     3                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the operator                   yRPN__operators       0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :len                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try string literal                                                                                                                                                                                    
     exec     load the string                      yRPN__load            "\"testing\""                                                 i_equal     9                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the operator                   yRPN__operators       0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :\"testing\"                               
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try a number                                                                                                                                                                                          
     exec     load the string                      yRPN__load            "123"                                                         i_equal     3                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the operator                   yRPN__operators       0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :123                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try invalid operator                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "$"                                                           i_equal     1                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the operator                   yRPN__operators       0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :$                                         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  try harder mistakes                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try if before the operator                                                                                                                                                                            
     exec     load the string                      yRPN__load            "a-b"                                                         i_equal     3                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a-b                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try if advanced to right start                                                                                                                                                                        
     exec     load the string                      yRPN__load            "a-b"                                                         i_equal     3                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       1                                                             i_equal     2                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a-b                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :-                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : h                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :-                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,h,-                                               
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : oh                                                  

   COND       try on a blank load                                                                                                                                                                                   
     exec     load the string                      yRPN__load            ""                                                            i_equal     0                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :((null))                                  
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with the position to advanced                                                                                                                                                                     
     exec     load the string                      yRPN__load            "a-b"                                                         i_equal     3                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       15                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a-b                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       try with a negative position                                                                                                                                                                          
     exec     load the string                      yRPN__load            "a-b"                                                         i_equal     3                                                            
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       -5                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a-b                                       
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   GROUP      v21  find in a larger context                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       check initial spaces                                                                                                                                                                                  
     exec     load the string                      yRPN__load            " 0+5eak az!==voz tu0+-ay c\"0x*=e 5."                        i_equal     35                                                           
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 0+5eak az!==voz tu0+-ay c\"0x*=e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the first entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            " 0+5eak az!==voz tu0+-ay c\"0x*=e 5."                        i_equal     35                                                           
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       2                                                             i_equal     3                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 0+5eak az!==voz tu0+-ay c\"0x*=e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :+                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : h                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :+                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,h,+                                               
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : oh                                                  

   COND       check the just into second entry                                                                                                                                                                      
     exec     load the string                      yRPN__load            " 0+5eak az!==voz tu0+-ay c\"0x*=e 5."                        i_equal     35                                                           
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       11                                                            i_equal     13                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 0+5eak az!==voz tu0+-ay c\"0x*=e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :==                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : k                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :==                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,k,==                                              
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : ok                                                  

   COND       check the further into second entry                                                                                                                                                                   
     exec     load the string                      yRPN__load            " 0+5eak az!==voz tu0+-ay c\"0x*=e 5."                        i_equal     35                                                           
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       12                                                            i_equal     13                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 0+5eak az!==voz tu0+-ay c\"0x*=e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :=                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : r                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :=                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,r,=                                               
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : or                                                  

   COND       check the second entry                                                                                                                                                                                
     exec     load the string                      yRPN__load            " 0+5eak az!==voz tu0+-ay c\"0x*=e 5."                        i_equal     35                                                           
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       10                                                            i_equal     12                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 0+5eak az!==voz tu0+-ay c\"0x*=e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :!=                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : k                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :!=                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,k,!=                                              
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : ok                                                  

   COND       check the just before third entry                                                                                                                                                                     
     exec     load the string                      yRPN__load            " 0+5eak az!==voz tu0+-ay c\"0x*=e 5."                        i_equal     35                                                           
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       19                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 0+5eak az!==voz tu0+-ay c\"0x*=e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the third entry                                                                                                                                                                                 
     exec     load the string                      yRPN__load            " 0+5eak az!==voz tu0+-ay c\"0x*=e 5."                        i_equal     35                                                           
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       20                                                            i_equal     21                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 0+5eak az!==voz tu0+-ay c\"0x*=e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :+                                         
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : h                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :+                                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,h,+                                               
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : oh                                                  

   COND       check the fourth entry                                                                                                                                                                                
     exec     load the string                      yRPN__load            " 0+5eak az!==voz tu0+-ay c\"0x*=e 5."                        i_equal     35                                                           
     code     unset the right_only flag            rpn.left_oper  = S_OPER_CLEAR;
     exec     check the type                       yRPN__operators       29                                                            i_equal     31                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    : 0+5eak az!==voz tu0+-ay c\"0x*=e 5.      
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :*=                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : r                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :*=                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,r,*=                                              
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : or                                                  

   GROUP      v21  fix right only unary operators                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       check initial function call                                                                                                                                                                           
     exec     load the string                      yRPN__load            "func ( +5, -8, 16); ++(*c); d=&e;"                           i_equal     33                                                           
     code     set the right_only flag              rpn.left_oper  = S_OPER_LEFT;
     exec     check the type                       yRPN__operators       0                                                             i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :func ( +5, -8, 16); ++(*c); d=&e;         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the first operator                                                                                                                                                                              
     exec     load the string                      yRPN__load            "func ( +5, -8, 16); ++(*c); d=&e;"                           i_equal     33                                                           
     code     set the right_only flag              rpn.left_oper  = S_OPER_LEFT;
     exec     check the type                       yRPN__operators       7                                                             i_equal     8                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :func ( +5, -8, 16); ++(*c); d=&e;         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :+:                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : f                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :+:                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,f,+:                                              
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : of                                                  

   COND       check the second operator                                                                                                                                                                             
     exec     load the string                      yRPN__load            "func ( +5, -8, 16); ++(*c); d=&e;"                           i_equal     33                                                           
     code     set the right_only flag              rpn.left_oper  = S_OPER_LEFT;
     exec     check the type                       yRPN__operators       11                                                            i_equal     12                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :func ( +5, -8, 16); ++(*c); d=&e;         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :-:                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : f                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :-:                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,f,-:                                              
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : of                                                  

   COND       check the comma ofter                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "func ( +5, -8, 16); ++(*c); d=&e;"                           i_equal     33                                                           
     code     set the right_only flag              rpn.left_oper  = S_OPER_LEFT;
     exec     check the type                       yRPN__operators       13                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :func ( +5, -8, 16); ++(*c); d=&e;         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       and just after that                                                                                                                                                                                   
     exec     load the string                      yRPN__load            "func ( +5, -8, 16); ++(*c); d=&e;"                           i_equal     33                                                           
     code     set the right_only flag              rpn.left_oper  = S_OPER_LEFT;
     exec     check the type                       yRPN__operators       14                                                            i_lesser    0                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :func ( +5, -8, 16); ++(*c); d=&e;         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : e                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 0                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :                                                    
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 0                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    :                                                     
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      :                                                     

   COND       check the increment operator                                                                                                                                                                          
     exec     load the string                      yRPN__load            "func ( +5, -8, 16); ++(*c); d=&e;"                           i_equal     33                                                           
     code     set the right_only flag              rpn.left_oper  = S_OPER_LEFT;
     exec     check the type                       yRPN__operators       20                                                            i_equal     22                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :func ( +5, -8, 16); ++(*c); d=&e;         
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :++                                        
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : f                                         
     get      token type assigned                  yRPN_accessor         "type"       ,   0                                            s_equal     current type     : o                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 1                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :++                                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :                                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :                                                    
     get      stack  -- depth                      yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 1                                                  
     get      stack  -- details                    yRPN_stack_unit       "stack_list" ,   0                                            s_equal     stack details    : o,f,++                                              
     get      stack  -- terse                      yRPN_stack_unit       "stack_terse",   0                                            s_equal     stack terse      : of                                                  

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          mathmatical expression interpretation                        yRPN_convert                                                                                                                                                   

   COND       setup some testing variables                                                                                                                                                                          
     exec     prepare for testing                  yRPN__testquiet                                                                     i_equal     0                                                            
     code     set the compiler mode                zRPN_lang    = S_LANG_C;

   GROUP      v21  single variable and single operator                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       start with addition                                                                                                                                                                                   
     exec     check the operator                   yRPN_convert          "a+b"                                                         s_equal     a b +                                                        
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a+b                                       
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 3                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a + b                                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 3                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :a b +                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,a v,b o,+                                         

   COND       simple increment (prefix)                                                                                                                                                                             
     exec     check the operator                   yRPN_convert          "++c"                                                         s_equal     c ++                                                         
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :++c                                       
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :++ c                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :c ++                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,c o,++                                            

   COND       simple increment (suffix)                                                                                                                                                                             
     exec     check the operator                   yRPN_convert          "c++"                                                         s_equal     c :+                                                         
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :c++                                       
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :c :+                                                
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :c :+                                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,c o,:+                                            

   COND       multipication                                                                                                                                                                                         
     exec     check the operator                   yRPN_convert          "xy * z_pos"                                                  s_equal     xy z_pos *                                                   
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :xy * z_pos                                
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 3                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :xy * z_pos                                          
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 3                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :xy z_pos *                                          
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,xy v,z_pos o,*                                    

   GROUP      v21  adding in assignments                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       try a simple assignment from equation                                                                                                                                                                 
     exec     check the operator                   yRPN_convert          "b=a+5"                                                       s_equal     b a 5 + =                                                    
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :b=a+5                                 
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                                   
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :b = a + 5                                           
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                                   
     get      output -- postfix summary            yRPN_accessor         "output"     ,   0                                            s_equal     postfix output   :b a 5 + =                                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"     ,   0                                            s_equal     postfix detail   :v,b v,a I,5 o,+ o,=                                         

   COND       try a multipication                                                                                                                                                                                   
     exec     check the operator                   yRPN_convert          "b = 10 * 30"                                                 s_equal     b 10 30 * =                                                  
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :b = 10 * 30                               
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :b = 10 * 30                               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b 10 30 * =                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :v,b I,10 I,30 o,* o,=                     

   COND       compound assignment                                                                                                                                                                                   
     exec     check the operator                   yRPN_convert          "b = a = 125"                                                 s_equal     b a 125 = =                                                                           
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :b = a = 125                               
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :b = a = 125                       
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b a 125 = =                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :v,b v,a I,125 o,= o,=                     

   GROUP      v21  mixing a few operators                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify add/subtract are of equal precedence                                                                                                                                                           
     exec     check the operator                   yRPN_convert          "10 - 3 + 2"                                                  s_equal     10 3 - 2 +                                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :10 - 3 + 2                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :10 - 3 + 2                        
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :10 3 - 2 +                                
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :I,10 I,3 o,- I,2 o,+                      

   COND       verify add/subtract are of equal precedence, again                                                                                                                                                    
     exec     check the operator                   yRPN_convert          "a = 3 + 4 - 2 + 7"                                           s_equal     a 3 4 + 2 - 7 + =                                                                     
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a = 3 + 4 - 2 + 7                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 9                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a = 3 + 4 - 2 + 7                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 9                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a 3 4 + 2 - 7 + =                         
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :v,a I,3 I,4 o,+ I,2 o,- I,7 o,+ o,=       

   COND       another mixture                                                                                                                                                                                       
     exec     check the operator                   yRPN_convert          "a + b + c - d"                                               s_equal     a b + c + d -                                                
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a + b + c - d                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 7                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a + b + c - d                     
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 7                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a b + c + d -                       

   COND       combination of addition and division                                                                                                                                                                  
     exec     check the operator                   yRPN_convert          "a + b / c"                                                   s_equal     a b c / +                                                                             
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a + b / c                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a + b / c                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a b c / +                                 

   GROUP      v21  hard examples                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       CSCI270 : example one                                                                                                                                                                                 
     exec     check the operator                   yRPN_convert          "a+b*c-d/e*f"                                                 s_equal     a b c * + d e / f * -                                                                 
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a+b*c-d/e*f                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 11                                        
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a + b * c - d / e * f                       
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 11                                        
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a b c * + d e / f * -                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :v,a v,b v,c o,* o,+ v,d v,e o,/ v,f o,* o,-  

   COND       CSCI270 : example two                                                                                                                                                                                 
     exec     check the operator                   yRPN_convert          "(a+b*c-d)/(e*f)"                                             s_equal     a b c * + d - e f * /                                                                 
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :(a+b*c-d)/(e*f)                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 15                                        
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :( a + b * c - d ) / ( e * f )                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 11                                        
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a b c * + d - e f * /                     

   COND       CSCI270 : variation                                                                                                                                                                                   
     exec     check the operator                   yRPN_convert          "a * (b + c) - d / e"                                         s_equal     a b c + * d e / -                                                                     
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a * (b + c) - d / e                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 11                                        
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a * ( b + c ) - d / e               
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 9                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a b c + * d e / -                         

   COND       combination of addition and multipication                                                                                                                                                             
     exec     check the operator                   yRPN_convert          "a + b * c - d"                                               s_equal     a b c * + d -                                                                         
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a + b * c - d                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 7                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a + b * c - d                     
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 7                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a b c * + d -                             

   COND       combination of addition and multipication with parens                                                                                                                                                 
     exec     check the operator                   yRPN_convert          "a + b * (c + d)"                                             s_equal     a b c d + * +                                                                         
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a + b * (c + d)                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 9                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a + b * ( c + d )                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 7                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a b c d + * +                             

   COND       temple cis223 : example one                                                                                                                                                                           
     exec     check the operator                   yRPN_convert          "x - y * a + b / c"                                           s_equal     x y a * - b c / +                                                                     
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :x - y * a + b / c                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 9                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :x - y * a + b / c                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 9                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :x y a * - b c / +                         

   COND       temple cis223 : example two                                                                                                                                                                           
     exec     check the operator                   yRPN_convert          "3+5*6-7*(8+5)"                                               s_equal     3 5 6 * + 7 8 5 + * -                                                                 
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :3+5*6-7*(8+5)                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 13                                        
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :3 + 5 * 6 - 7 * ( 8 + 5 )                     
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 11                                        
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :3 5 6 * + 7 8 5 + * -                     

   COND       art of assemply : example one                                                                                                                                                                         
     exec     check the operator                   yRPN_convert          "a = (x * y - z + t)/2.0"                                     s_equal     a x y * z - t + 2.0 / =                                                               
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a = (x * y - z + t)/2.0                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 13                                        
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a = ( x * y - z + t ) / 2.0           
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 11                                        
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a x y * z - t + 2.0 / =                   

   COND       art of assemply : example two                                                                                                                                                                         
     exec     check the operator                   yRPN_convert          "x = ((y-z)*a) - ( a + b * c)/3.14159"                        s_equal     x y z - a * a b c * + 3.14159 / - =                                              
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :x = ((y-z)*a) - ( a + b * c)/3.14159                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 21                                        
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :x = ( ( y - z ) * a ) - ( a + b * c ) / 3.14159  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 15                                        
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :x y z - a * a b c * + 3.14159 / - =        

#  GROUP      v21  bad grouping                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

#  COND       unbalanced parens : no ending paren                                                                                                                                                                   
#    exec     check the operator                   yRPN_convert          "(a + b"                                                      p_null      0                                                            
#    get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :(a + b                                          
#    get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 4                                         
#    get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :( a + b                            
#    get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                         
#    get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :((null))                                  

#  COND       unbalanced parens : no beginning paren                                                                                                                                                                
#    exec     check the operator                   yRPN_convert          "a + b)"                                                      p_null      0                                                            
#    get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a + b)                                          
#    get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 4                                         
#    get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a + b )                            
#    get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                         
#    get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :((null))                                  

#  GROUP      v21  conversion issues                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

#  COND       binary operator with one argument                                                                                                                                                                     
#    exec     check the operator                   yRPN_convert          "one *"                                                       s_nulll     0                                                                                     
#    get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :one *                                               
#    get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
#    get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :one *                             
#    get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                         
#    get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :((null))                                  
#    get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :((null))                                  

#  COND       binary operator with one argument                                                                                                                                                                     
#    exec     check the operator                   yRPN_convert          "= 32.5"                                                      s_nulll     0                                                                                     
#    get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    := 32.5                                              
#    get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
#    get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     := 32.5                            
#    get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 0                                         
#    get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :((null))                                  
#    get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :((null))                                  

   GROUP      v21  complete                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;



#23456789012  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)=====  ========================(arguments)=========================  ==(test)==  ==========================(results)=================================== 
SCRP          cell address verification                                    yRPN__cells                                                                                                                                          

   COND       setup some testing variables                                 ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the spreadsheet mode             zRPN_lang    = 's';

   COND       setup some testing variables                                                                                                                                                                                    
     code     create a custom expect string        char custom[2000];                                                                                                                                                         

   COND       try a very simple address                                    ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "a1"           , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   0, col=   0, row=   0, abs=0                 

   COND       try a larger address                                         ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "d6"           , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   0, col=   3, row=   5, abs=0                 

   COND       try a two digit row                                          ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "d65"          , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   0, col=   3, row=  64, abs=0                 

   COND       try a three digit row                                        ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "d652"         , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   0, col=   3, row= 651, abs=0                 

   COND       try error row specifications                                 ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "ac"           , NULL     , NULL     , NULL    , NULL         i_lesser    0                                                                      
     exec     call the function                    yRPN__cells           "a123456"      , NULL     , NULL     , NULL    , NULL         i_lesser    0                                                                      

   COND       try a two character column                                   ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "az6"          , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   0, col=  51, row=   5, abs=0                 

   COND       try error columns specifications                             ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "8"            , NULL     , NULL     , NULL    , NULL         i_lesser    0                                                                      
     exec     call the function                    yRPN__cells           "A5"           , NULL     , NULL     , NULL    , NULL         i_lesser    0                                                                      

   COND       add a tab specifier                                          ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "1a3"          , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   1, col=   0, row=   2, abs=0                 

   COND       add a large tab                                              ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "5a3"          , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   5, col=   0, row=   2, abs=0                 

   COND       try a zero tab                                               ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "0a3"          , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   0, col=   0, row=   2, abs=0                 

   COND       use an absolute row                                          ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "0a$3"         , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   0, col=   0, row=   2, abs=1                 

   COND       use an absolute column                                       ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "0$a3"         , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   0, col=   0, row=   2, abs=2                 

   COND       use an absolute tab                                          ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "$0a3"         , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   0, col=   0, row=   2, abs=4                 

   COND       use double absolute markers                                  ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "0$a$3"        , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   0, col=   0, row=   2, abs=3                 

   COND       use the all absolute marker                                  ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "@0a3"         , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   0, col=   0, row=   2, abs=7                 

   COND       use duplicate absolute markers                               ------------------------------------------------------------  ------------------------------------------------------------------------------------ 
     exec     call the function                    yRPN__cells           "@0$a3"        , NULL     , NULL     , NULL    , NULL         i_equal     0                                                                      
     get      review the parsing                   yRPN_syms_unit        "address"    ,   0                                            s_equal     yRPN address     : tab=   0, col=   0, row=   2, abs=7                 

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          simple cell addresses (spreadsheet)  yRPN__addresses                                                                                                                                                

   COND       setup some testing variables                                                                                                                                                                          
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the spreadsheet mode             zRPN_lang    = 's';

   COND       try a very simple address                                                                                                                                                                             
     exec     load the string                      yRPN__load            "a1"                                                          i_equal     2                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     2                                                            
     get      original input string                yRPN_accessor         "source"     ,   0                                            s_equal     source string    :a1                                        
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0a1                                       
     get      token precedence assigned            yRPN_accessor         "precedence" ,   0                                            s_equal     precedence       : -                                         

   COND       try another simple address                                                                                                                                                                            
     exec     load the string                      yRPN__load            "m5"                                                          i_equal     2                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     2                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0m5                                       

   COND       try a multi-digit row                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "z25"                                                         i_equal     3                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     3                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0z25                                      

   COND       try a bigger row                                                                                                                                                                                      
     exec     load the string                      yRPN__load            "z3529"                                                       i_equal     5                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     5                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0z3529                                    

   COND       try a multi-character column                                                                                                                                                                          
     exec     load the string                      yRPN__load            "ji250"                                                       i_equal     5                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     5                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0ji250                                    

   COND       try a three character column                                                                                                                                                                          
     exec     load the string                      yRPN__load            "jia50"                                                       i_equal     5                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_lesser    0                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  

   COND       try a five digit row                                                                                                                                                                                  
     exec     load the string                      yRPN__load            "b12345"                                                      i_equal     6                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_lesser    0                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :((null))                                  

   COND       try a absolute address, ver2                                                                                                                                                                          
     exec     load the string                      yRPN__load            "$a5"                                                         i_equal     3                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     3                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0$a5                                      

   COND       try a absolute address, ver3                                                                                                                                                                          
     exec     load the string                      yRPN__load            "az$52"                                                       i_equal     5                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     5                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0az$52                                    

   COND       try a absolute address, ver4                                                                                                                                                                          
     exec     load the string                      yRPN__load            "$d$15"                                                       i_equal     5                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     5                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0$d$15                                    

   COND       try a absolute address, ver5                                                                                                                                                                          
     exec     load the string                      yRPN__load            "@y12"                                                        i_equal     4                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     4                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :@0y12                                     

   COND       try with a tab number                                                                                                                                                                                 
     exec     load the string                      yRPN__load            "1a1"                                                         i_equal     3                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     3                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :1a1                                       

   COND       try with a zero tab                                                                                                                                                                                   
     exec     load the string                      yRPN__load            "0a1"                                                         i_equal     3                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     3                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :0a1                                       

   COND       try with a larger tab number                                                                                                                                                                          
     exec     load the string                      yRPN__load            "12a1"                                                        i_equal     4                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     4                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :12a1                                      

   COND       try a absolute address                                                                                                                                                                                
     exec     load the string                      yRPN__load            "$0$y$12"                                                     i_equal     7                                                            
     exec     check the address                    yRPN__addresses       0                                                             i_equal     7                                                            
     get      token extracted                      yRPN_accessor         "token"      ,   0                                            s_equal     current token    :@0y12                                     

   COND       clean-up                                                                                                                                                                                              
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the mode to compiler             zRPN_lang    = 'c';



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          interpreting unary operators         yRPN_convert                                                                                                                                                   

   COND       setup some testing variables                                                                                                                                                                          
     exec     prepare for testing                  yRPN__testquiet                                                                     i_equal     0                                                            
     code     set the compiler mode                zRPN_lang    = S_LANG_C;

   COND       internal plus                                                                                                                                                                                         
     exec     check the operator                   yRPN_convert          "a + + b"                                                     s_equal     a b +: +                                                     
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 4                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a + +: b                                     
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 4                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a b +: +                                  

   COND       internal minus                                                                                                                                                                                        
     exec     check the operator                   yRPN_convert          "a + - b"                                                     s_equal     a b -: +                                                                             
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 4                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a + -: b                                     
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 4                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a b -: +                                  

   COND       double negative                                                                                                                                                                                       
     exec     check the operator                   yRPN_convert          "a + - - b"                                                   s_equal     a b -: -: +                                                                          
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :a + -: -: b                                   
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a b -: -: +                               

   COND       leading minus                                                                                                                                                                                         
     exec     check the operator                   yRPN_convert          "-b"                                                          s_equal     b -:                                                                                 
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :-: b                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b -:                                      

   COND       leading minus outside parentheses                                                                                                                                                                     
     exec     check the operator                   yRPN_convert          "-(b)"                                                        s_equal     b -:                                                                                 
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 4                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :-: ( b )                                     
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b -:                                      

   COND       leading minus before expression                                                                                                                                                                       
     exec     check the operator                   yRPN_convert          "-b*c+a"                                                      s_equal     b -: c * a +                                                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 6                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :-: b * c + a                                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 6                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b -: c * a +                              

   COND       leading minus outside parentheses                                                                                                                                                                     
     exec     check the operator                   yRPN_convert          "- (b + a)"                                                   s_equal     b a + -:                                                                             
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 6                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :-: ( b + a )                                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 4                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b a + -:                                  

   COND       using the logical not                                                                                                                                                                                 
     exec     check the operator                   yRPN_convert          "!b"                                                          s_equal     b !                                                                                  
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :! b                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b !                                       

   COND       using the logical not with an assignment                                                                                                                                                              
     exec     check the operator                   yRPN_convert          "=!b"                                                         s_equal     b ! =                                                                                
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 3                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     := ! b                                       
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 3                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b ! =                                     

   COND       using an unary plus with an assignment                                                                                                                                                                
     exec     check the operator                   yRPN_convert          "=+b"                                                         s_equal     b +: =                                                                               
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 3                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     := +: b                                       
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 3                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b +: =                                    

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          pointer operations (compilier)       yRPN_convert                                                                                                                                                   

   COND       setup some testing variables                                                                                                                                                                          
     exec     prepare for testing                  yRPN__testquiet                                                                     i_equal     0                                                            
     code     set the compiler mode                zRPN_lang    = S_LANG_C;

   COND       variable address-of                                                                                                                                                                                   
     exec     feed in the expression               yRPN_convert          "&a"                                                          s_equal     a &:                                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :&: a                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a &:                                      

   COND       dereferencing a pointer                                                                                                                                                                               
     exec     feed in the expression               yRPN_convert          "*b"                                                          s_equal     b *:                                                         
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :*: b                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b *:                                      

   COND       assigning a dereferenced pointer                                                                                                                                                                      
     exec     feed in the expression               yRPN_convert          "c=*b"                                                        s_equal     c b *: =                                                                        
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 4                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :c = *: b                                     
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 4                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :c b *: =                                  

   COND       both reference and dereference                                                                                                                                                                        
     exec     feed in the expression               yRPN_convert          "b=*&a"                                                       s_equal     b a &: *: =                                                                     
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :b = *: &: a                                  
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b a &: *: =                               

   COND       both reference and dereference                                                                                                                                                                        
     exec     feed in the expression               yRPN_convert          "b=*a+c"                                                      s_equal     b a *: c + =                                                                    
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 6                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :b = *: a + c                                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 6                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b a *: c + =                              

   COND       more complicated combination                                                                                                                                                                          
     exec     feed in the expression               yRPN_convert          "b=!++*&a"                                                    s_equal     b a &: *: ++ ! =                                                                
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 7                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :b = ! ++ *: &: a                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 7                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b a &: *: ++ ! =                          

   COND       more complicated combination with parens                                                                                                                                                              
     exec     feed in the expression               yRPN_convert          "b=!(++(*(&a)))"                                              s_equal     b a &: *: ++ ! =                                                                
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 13                                        
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :b = ! ( ++ ( *: ( &: a ) ) )                 
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 7                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :b a &: *: ++ ! =                          

   COND       use a pointer arrow                                                                                                                                                                                   
     exec     feed in the expression               yRPN_convert          "++cell->count"                                               s_equal     cell count -> ++                                                                
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 4                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :++ cell -> count                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 4                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :cell count -> ++                          

   COND       use a pointer dot                                                                                                                                                                                     
     exec     feed in the expression               yRPN_convert          "++cell.count"                                                s_equal     cell count . ++                                                                
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 4                                         
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :++ cell . count                             
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 4                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :cell count . ++                          

   COND       and some math                                                                                                                                                                                         
     exec     feed in the expression               yRPN_convert          "c = ++cell.count * link->next"                               s_equal     c cell count . ++ link next -> * =                                               
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 10                                        
     get      output -- infix tokenization         yRPN_accessor         "tokens"     ,   0                                            s_equal     infix output     :c = ++ cell . count * link -> next          
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 10                                        
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :c cell count . ++ link next -> * =         

   COND       clean-up                                                                                                                                                                                              
     exec     wrap-up for testing                  yRPN__testend                                                                       i_equal     0                                                            
     code     set the mode to compiler             zRPN_lang    = S_LANG_C;



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          bitwise operations (compilier)       yRPN_convert                                                                                                                                                   

   COND       setup some testing variables                                                                                                                                                                          
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the compiler mode                zRPN_lang    = 'c';

   COND       simple bitwise AND                                                                                                                                                                                    
     exec     feed in the expression               yRPN_convert          "a & 1"                                                       s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 3                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 3                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a 1 &                                     

   COND       simple bitwise OR                                                                                                                                                                                     
     exec     feed in the expression               yRPN_convert          "a | 1"                                                       s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 3                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 3                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a 1 |                                     

   COND       simple bitwise XOR                                                                                                                                                                                    
     exec     feed in the expression               yRPN_convert          "a ^ 1"                                                       s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 3                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 3                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a 1 ^                                     

   COND       simple bitwise NOT                                                                                                                                                                                    
     exec     feed in the expression               yRPN_convert          "~a"                                                          s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a ~                                       

   COND       bitwise versus comparison                                                                                                                                                                             
     exec     feed in the expression               yRPN_convert          "(a & 1 == c >> 2)"                                           s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 7                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 7                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a 1 c 2 >> == &                           

   COND       bitwise versus comparison with parens                                                                                                                                                                 
     exec     feed in the expression               yRPN_convert          "((a & 1) == (c >> 2))"                                       s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 7                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 7                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a 1 & c 2 >> ==                           

   COND       clean-up                                                                                                                                                                                              
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the mode to compiler             zRPN_lang    = 'c';



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          simple functions (spreadsheet)       yRPN_convert                                                                                                                                                   

   COND       setup some testing variables                                                                                                                                                                          
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the spreadsheet                  zRPN_lang    = 's';

   COND       try a simple, one-parameter function                                                                                                                                                                  
     exec     check the operator                   yRPN_convert          "sin (a)"                                                     s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a sin                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :v,a p,sin                                 

   COND       try two formulas with an operator between                                                                                                                                                             
     exec     check the operator                   yRPN_convert          "sin (a) * cos (b)"                                           s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a sin b cos *                             
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :v,a p,sin v,b p,cos o,*                   

   COND       try a two-parameter function                                                                                                                                                                          
     exec     check the operator                   yRPN_convert          "logger(var1, 35)"                                            s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 3                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 3                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :var1 35 logger                            
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :v,var1 I,35 p,logger                      

   COND       try a four-parameter function                                                                                                                                                                         
     exec     check the operator                   yRPN_convert          "g_arc (12.2, 15.8, 30, t)"                                   s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :12.2 15.8 30 t g_arc                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :F,12.2 F,15.8 I,30 v,t p,g_arc            

   COND       try a one-parameter with a string literal                                                                                                                                                             
     exec     check the operator                   yRPN_convert          "puts (\"testing\")"                                          s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :\"testing\" puts                          
     get      output -- postfix detail             yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :S,\"testing\" p,puts                      

   COND       try a one-parameter with a string literal with spaces                                                                                                                                                 
     exec     check the operator                   yRPN_convert          "puts (\"test one two three\")"                               s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :\"test one two three\" puts               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :S,\"test one two three\" p,puts           

   COND       try a one-parameter with a constant literal                                                                                                                                                           
     exec     check the operator                   yRPN_convert          "putchar (' ')"                                               s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :' ' putchar                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :C,' ' p,putchar                           

   COND       function with no arguments                                                                                                                                                                            
     exec     check the operator                   yRPN_convert          "a = func()"                                                  s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 3                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 3                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a func =                                  

   COND       assignments and equality                                                                                                                                                                              
     exec     check the operator                   yRPN_convert          "a = func() == 3"                                             s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a func 3 == =                             

   COND       assignments and equality with parens                                                                                                                                                                  
     exec     check the operator                   yRPN_convert          "(a = func()) == 3"                                           s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a func = 3 ==                             

   COND       functions using other functions values                                                                                                                                                                
     exec     check the operator                   yRPN_convert          "strncpy (x_dst, x_src, strlen (x_src))"                      s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :x_dst x_src x_src strlen strncpy          

   COND       clean-up                                                                                                                                                                                              
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the mode to compiler             zRPN_lang    = 'c';



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          simple functions (compilier)         yRPN_convert                                                                                                                                                   

   COND       setup some testing variables                                                                                                                                                                          
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the compiler mode                zRPN_lang    = 'c';

   COND       try a simple, one-parameter function                                                                                                                                                                  
     exec     check the operator                   yRPN_convert          "sin (a)"                                                     s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a sin                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :v,a p,sin                                 

   COND       try two formulas with an operator between                                                                                                                                                             
     exec     check the operator                   yRPN_convert          "sin (a) * cos (b)"                                           s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a sin b cos *                             
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :v,a p,sin v,b p,cos o,*                   

   COND       try a two-parameter function                                                                                                                                                                          
     exec     check the operator                   yRPN_convert          "logger(var1, 35)"                                            s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 3                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 3                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :var1 35 logger                            
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :v,var1 I,35 p,logger                      

   COND       try a four-parameter function                                                                                                                                                                         
     exec     check the operator                   yRPN_convert          "g_arc (12.2, 15.8, 30, t)"                                   s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :12.2 15.8 30 t g_arc                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :F,12.2 F,15.8 I,30 v,t p,g_arc            

   COND       try a one-parameter with a string literal                                                                                                                                                             
     exec     check the operator                   yRPN_convert          "puts (\"testing\")"                                          s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :\"testing\" puts                          
     get      output -- postfix summary            yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :S,\"testing\" p,puts                      

   COND       try a one-parameter with a string literal with spaces                                                                                                                                                 
     exec     check the operator                   yRPN_convert          "puts (\"test one two three\")"                               s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :\"test one two three\" puts               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :S,\"test one two three\" p,puts           

   COND       try a one-parameter with a constant literal                                                                                                                                                           
     exec     check the operator                   yRPN_convert          "putchar (' ')"                                               s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :' ' putchar                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :C,' ' p,putchar                           

   COND       function with no arguments                                                                                                                                                                            
     exec     check the operator                   yRPN_convert          "a = func()"                                                  s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 3                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 3                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a func =                                  

   COND       assignments and equality                                                                                                                                                                              
     exec     check the operator                   yRPN_convert          "a = func() == 3"                                             s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a func 3 == =                             

   COND       assignments and equality with parens                                                                                                                                                                  
     exec     check the operator                   yRPN_convert          "(a = func()) == 3"                                           s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a func = 3 ==                             

   COND       functions using other functions values                                                                                                                                                                
     exec     check the operator                   yRPN_convert          "strncpy (x_dst, x_src, strlen (x_src))"                      s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 5                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 5                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :x_dst x_src x_src strlen strncpy          

   COND       clean-up                                                                                                                                                                                              
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the mode to compiler             zRPN_lang    = 'c';



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          simple declarations (compilier)      yRPN_convert                                                                                                                                                   

   COND       setup some testing variables                                                                                                                                                                          
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the compiler mode                zRPN_lang    = 'c';

   COND       try a variable declaration                                                                                                                                                                            
     exec     check the operator                   yRPN_convert          "int     first"                                               s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 2                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 2                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :int first                                 

   COND       try a multiple declaration                                                                                                                                                                            
     exec     check the operator                   yRPN_convert          "int     first, second"                                       s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 3                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 3                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :int first second                          

   COND       try a declaration with initializer                                                                                                                                                                    
     exec     check the operator                   yRPN_convert          "int     first  = 2145"                                       s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 4                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 4                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :int first 2145 =                          

   COND       try a declaration with initializer, and another                                                                                                                                                       
     exec     check the operator                   yRPN_convert          "int     first  = 2145, second = 5150"                        s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 7                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 7                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :int first 2145 = second 5150 =            

   COND       clean-up                                                                                                                                                                                              
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the mode to compiler             zRPN_lang    = 'c';



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          expressions with addresses           yRPN_convert                                                                                                                                                   

   COND       setup some testing variables                                                                                                                                                                          
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the spreadsheet mode             zRPN_lang    = 's';
#    code     set the spreadsheet divider          strcpy (s_divider   , ",");

   COND       very simple address expression                                                                                                                                                                        
     exec     check the operator                   yRPN_convert          "=b10"                                                        s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :0b10 =                                    
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :@,0b10 o,=                                

   COND       address with addition                                                                                                                                                                                 
     exec     check the operator                   yRPN_convert          "= d15 + e27"                                                 s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :0d15 0e27 + =                             
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :@,0d15 @,0e27 o,+ o,=                     

   COND       try a normal range formula                                                                                                                                                                            
     exec     check the operator                   yRPN_convert          "=sum(a15..a35)"                                              s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :0a15 0a35 .. sum =                        
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :@,0a15 @,0a35 o,.. p,sum o,=              

   COND       try a cell assignment                                                                                                                                                                                 
     exec     check the operator                   yRPN_convert          "= b6 + 4"                                                    s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :0b6 4 + =                                 
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :@,0b6 I,4 o,+ o,=                         

#  COND       try a cell assignment: spreadsheet specific                                                                                                                                                           
#    exec     check the operator                   yRPN_spreadsheet      "= b6 + 4"                                                    s_not       ""                                                           
#    get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :0b6,4,+,=                                 
#    exec     set back to human readable           yRPN__shuman                                                                        i_equal     0                                                            

   COND       clean-up                                                                                                                                                                                              
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the mode to compiler             zRPN_lang    = 'c';



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          expressions with constants           yRPN_convert                                                                                                                                                   

   COND       setup some testing variables                                                                                                                                                                          
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the spreadsheet mode             zRPN_lang    = 's';

   COND       add a basic constant                                                                                                                                                                                  
     exec     check the operator                   yRPN_convert          "=b10 + PI"                                                   s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :0b10 PI + =                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :@,0b10 n,PI o,+ o,=                       

   COND       use a second constant                                                                                                                                                                                 
     exec     check the operator                   yRPN_convert          "=TRUE + 2.5"                                                 s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :TRUE 2.5 + =                              
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :n,TRUE F,2.5 o,+ o,=                      

   COND       undefined constant                                                                                                                                                                                    
     exec     check the operator                   yRPN_convert          "=TRUTHY + 2.5"                                               s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :TRUTHY 2.5 + =                            
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :v,TRUTHY F,2.5 o,+ o,=                    

   COND       clean-up                                                                                                                                                                                              
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the mode to compiler             zRPN_lang    = 'c';



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          declarations                         yRPN_convert                                                                                                                                                   

   COND       setup some testing variables                                                                                                                                                                          
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the spreadsheet mode             zRPN_lang    = 'c';

   COND       add a basic declaration                                                                                                                                                                               
     exec     check the operator                   yRPN_convert          "int  a"                                                      s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :int a                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :t,int v,a                                 

   COND       modified declaration                                                                                                                                                                                  
     exec     check the operator                   yRPN_convert          "long long b"                                                 s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :long long b                               
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :t,long t,long v,b                         

   COND       pointer declaration                                                                                                                                                                                   
     exec     check the operator                   yRPN_convert          "long *c"                                                     s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :long c *:                                 
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :t,long v,c o,*:                           

   COND       double pointer declaration                                                                                                                                                                            
     exec     check the operator                   yRPN_convert          "long **c"                                                    s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :long c *: *:                              
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :t,long v,c o,*: o,*:                      

   COND       mixed pointer and variable declaration                                                                                                                                                                
     exec     check the operator                   yRPN_convert          "char *d, e, **f"                                             s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :char d *: e f *: *:                       
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :t,char v,d o,*: v,e v,f o,*: o,*:         

   COND       array declaration                                                                                                                                                                                     
     exec     check the operator                   yRPN_convert          "double g [10]"                                               s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :double g 10 ]*                            
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :t,double v,g I,10 o,]*                    

   COND       array declaration                                                                                                                                                                                     
     exec     check the operator                   yRPN_convert          "double g [10]"                                               s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :double g 10 ]*                            
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :t,double v,g I,10 o,]*                    

   COND       array declaration with calculated dimension                                                                                                                                                           
     exec     check the operator                   yRPN_convert          "double i [k * 10]"                                           s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :double i k 10 * ]*                        
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :t,double v,i v,k I,10 o,* o,]*            

   COND       matrix declaration                                                                                                                                                                                    
     exec     check the operator                   yRPN_convert          "double h [10][20]"                                           s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   : double h 10 ]* 20]*                      
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :t,double v,h I,10 o,]* I,20 o,]*          

   COND       clean-up                                                                                                                                                                                              
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the mode to compiler             zRPN_lang    = 'c';



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          pointer access                       yRPN_convert                                                                                                                                                   

   COND       setup some testing variables                                                                                                                                                                          
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the spreadsheet mode             zRPN_lang    = 'c';

   COND       add a basic declaration                                                                                                                                                                               
     exec     check the operator                   yRPN_convert          "a.c"                                                         s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a c .                                     
     get      output -- postfix detail (value)     yRPN_accessor         "detail"   ,     0                                            s_equal     postfix detail   :v,a v,c o,.                               

   COND       clean-up                                                                                                                                                                                              
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the mode to compiler             zRPN_lang    = 'c';



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          calculation depth                    yRPN_convert                                                                                                                                                   

   COND       setup some testing variables                                                                                                                                                                          
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     exec     put into compiler mode               yRPN_compiler                                                                       i_equal     0                                                            

   COND       add a basic declaration                                                                                                                                                                               
     exec     check the operator                   yRPN_convert          "a + b"                                                       s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a, b, +                                   
     get      review the postfix output            yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 2                                         

   COND       add a basic declaration                                                                                                                                                                               
     exec     check the operator                   yRPN_convert          "a + b + c - d"                                               s_not       ""                                                           
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a, b, +, c, +, d, -                       
     get      review the postfix output            yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 2                                         

   COND       CSCI270 : variation                                                                                                                                                                                   
     exec     check the operator                   yRPN_convert          "a * (b + c) - d / e"                                         s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 9                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 9                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :a, b, c, +, *, d, e, /, -                 
     get      review the postfix output            yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 3                                         

   COND       art of assemply : example one                                                                                                                                                                         
     exec     check the operator                   yRPN_convert          "((y-z)*a) - ( a + b * c)/3.14159"                            s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 13                                        
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 13                                        
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :y, z, -, a, *, a, b, c, *, +, 3.14159, /, - 
     get      review the postfix output            yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 4                                         

   COND       art of assemply : example two                                                                                                                                                                         
     exec     check the operator                   yRPN_convert          "(x * y - z + t)/2.0"                                         s_not       ""                                                           
     get      output -- infix count                yRPN_accessor         "n_tokens"   ,   0                                            s_equal     infix count      : 9                                         
     get      output -- postfix count              yRPN_accessor         "n_detail"   ,   0                                            s_equal     postfix count    : 9                                         
     get      output -- postfix summary            yRPN_accessor         "output"   ,     0                                            s_equal     postfix output   :x, y, *, z, -, t, +, 2.0, /               
     get      review the postfix output            yRPN_stack_unit       "stack_depth",   0                                            s_equal     stack depth      : 2                                         

   COND       clean-up                                                                                                                                                                                              
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the mode to compiler             zRPN_lang    = 'c';



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          tokenizing                           yRPN_tokens                                                                                                                                                    

   COND       setup some testing variables                                                                                                                                                                          
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the compiler mode                zRPN_lang    = 'c';

   COND       try variable definitions                                                                                                                                                                              
     exec     single definition                    yRPN_tokens           "int a"                                                       s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :int a                                     
     exec     compound types                       yRPN_tokens           "short int b"                                                 s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :short int b                               
     exec     pointer type                         yRPN_tokens           "char *c"                                                     s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :char *: c                                 
     exec     with assignment                      yRPN_tokens           "long d = 3000"                                               s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :long d = 3000                             
     exec     with float assignment                yRPN_tokens           "double e = 3.1415927"                                        s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :double e = 3.1415927                      
     exec     with expression assignment           yRPN_tokens           "float test = 23.5 * 42.8"                                    s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :float test = 23.5 * 42.8                  
     exec     a constant                           yRPN_tokens           "const int g = 30"                                            s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :const int g = 30                          
     exec     function pointer                     yRPN_tokens           "char (*func3) (void)"                                        s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :char ( *: func3 ) ( void )                

   COND       try expressions                                                                                                                                                                                       
     exec     simple expression                    yRPN_tokens           "a = b * c"                                                   s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :a = b * c                                 
     exec     with numbers also                    yRPN_tokens           "a = b * c + 30"                                              s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :a = b * c + 30                            
     exec     with parenthesis                     yRPN_tokens           "a = b * (c + 30)"                                            s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :a = b * ( c + 30 )                        
     exec     deeper parentheses                   yRPN_tokens           "a = (b * (c + 30))"                                          s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :a = ( b * ( c + 30 ) )                    

   COND       try functions                                                                                                                                                                                         
     exec     no parameters                        yRPN_tokens           "pi()"                                                        s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :pi ( )                                    
     exec     with a single variable parameter     yRPN_tokens           "strlen (c)"                                                  s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :strlen ( c )                              
     exec     with a two variable parameters       yRPN_tokens           "atan2 (a, b)"                                                s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :atan2 ( a , b )                           
     exec     with a slew of parameters            yRPN_tokens           "func2 (\"this is a test\", a, b, c, d)"                      s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :func2 ( \"this is a test\" , a , b , c , d ) 

   COND       clean-up                                                                                                                                                                                              
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the mode to compiler             zRPN_lang    = 'c';



#==(verb)===  ===========(short desc)============  =====(function)=====  ========================(arguments)=========================  ==========  ==========================(results)========================= 
SCRP          preprocessor content                 yRPN_tokens                                                                                                                                                    

   COND       setup some testing variables                                                                                                                                                                          
#    code     set the debug on                     zRPN_olddebug= 'y';
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the compiler mode                zRPN_lang    = 'c';

   COND       try includes                                                                                                                                                                                          
     exec     local header                         yRPN_tokens           "#include \"local.h\""                                        s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :# include \"local.h\"                     
     exec     global header                        yRPN_tokens           "#include <stdio.h>"                                          s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :# include <stdio.h>                       
     exec     global header in sub directory       yRPN_tokens           "#include <sys/ctypes.h>"                                     s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :# include <sys/ctypes.h>                  
     exec     indentation before hash              yRPN_tokens           "    #include <stdio.h>"                                      s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :# include <stdio.h>                       
     exec     indentation after hash               yRPN_tokens           "#    include <stdio.h>"                                      s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :# include <stdio.h>                       

   COND       try defines                                                                                                                                                                                           
     exec     very simple                          yRPN_tokens           "#define BIG_MAN   little"                                    s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :# define  BIG_MAN   little                
     exec     string                               yRPN_tokens           "#define BIG_MAN   \"test string\""                           s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :# define  BIG_MAN   \"test string\"       
     exec     function like macro                  yRPN_tokens           "#define F(x,y)  func2 ( y, x)"                               s_not       ""                                                           
     get        token extracted s                  yRPN_accessor         "tokens"   ,     0                                            s_equal     infix output     :# define  F(x,y)  func2 ( y, x)           

   COND       clean-up                                                                                                                                                                                              
     code     set the debug off                    zRPN_olddebug= 'n';
     code     set the mode to compiler             zRPN_lang    = 'c';



