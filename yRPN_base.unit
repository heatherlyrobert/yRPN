#!/usr/local/bin/koios
#   koios-polos (axis of heaven) unit testing meta-language



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
PREP          include the prototype headers                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       include main header                  yRPN.h                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       include private header               yRPN_priv.h                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP    [Ãô]  (BASE) mathmatical expressions, single operator                    0s   operator        yrpn_base__convert                                                           ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    

   COND       start with addition                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a+b"                                                                                                 i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a+b                                                                                
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 3) :   5åa b +æ                                                                          
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 3) :  11åv,a v,b o,+æ                                                                      
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 3) :  17åv,0,a v,2,b o,1,+æ                                                                   
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 3) :   5åa + bæ                                                                               
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 3) :   5åa + bæ                                                                               
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 3) :   5åa + bæ                                                                            
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 3) :   3åa+bæ                                                                          

   COND       simple increment (prefix)                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "++c"                                                                                                 i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :++c                                                                                
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 2) :   4åc ++æ                                                                           
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 2) :   8åv,c o,++æ                                                                         
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 2) :  12åv,2,c o,0,++æ                                                                        
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 2) :   4å++ cæ                                                                                
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 2) :   4å++ cæ                                                                                
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 2) :   3å++cæ                                                                              
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 2) :   3å++cæ                                                                          

   COND       simple increment (suffix)                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "c++"                                                                                                 i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :c++                                                                                
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 2) :   4åc :+æ                                                                           
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 2) :   8åv,c o,:+æ                                                                         
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 2) :  12åv,0,c o,1,:+æ                                                                        
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 2) :   4åc :+æ                                                                                
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 2) :   4åc ++æ                                                                                
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 2) :   3åc++æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 2) :   3åc++æ                                                                          

   COND       multipication                                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "xy * z_pos"                                                                                          i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :xy * z_pos                                                                         
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 3) :  10åxy z_pos *æ                                                                     
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 3) :  16åv,xy v,z_pos o,*æ                                                                         
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 3) :  22åv,0,xy v,5,z_pos o,3,*æ                                                              
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 3) :  10åxy * z_posæ                                                                          
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 3) :  10åxy * z_posæ                                                                          
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 3) :  10åxy * z_posæ                                                                       
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 3) :   8åxy´z_posæ                                                                     

   COND       squared                                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "zÆ"                                                                                                  i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :zÆ                                                                                 
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 2) :   3åz Ææ                                                                            
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 2) :   7åv,z o,Ææ                                                                                  
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 2) :  11åv,0,z o,1,Ææ                                                                         
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 2) :   3åz Ææ                                                                                 
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 2) :   3åz Ææ                                                                                 
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 2) :   2åzÆæ                                                                               
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 2) :   2åzÆæ                                                                           

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.034))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP    [Ãô]  (BASE) mathmatical expression with assignment                      0s   assign          yrpn_base__convert                                                           ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    

   COND       try a simple assignment from equation                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "b=a+5"                                                                                               i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :b=a+5                                                                              
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) :   9åb a 5 + =æ                                                                      
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) :  19åv,b v,a I,5 o,+ o,=æ                                                                      
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) :  29åv,0,b v,2,a I,4,5 o,3,+ o,1,=æ                                                       
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 5) :   9åb = a + 5æ                                                                           
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 5) :   9åb = a + 5æ                                                                           
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 5) :   9åb = a + 5æ                                                                        
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 5) :   5åb=a+5æ                                                                        

   COND       try a multipication                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "b += 10 * 30"                                                                                        i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :b += 10 * 30                                                                        
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) :  12åb 10 30 * +=æ                                                                      
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) :  22åv,b I,10 I,30 o,* o,+=æ                                                                      
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) :  33åv,0,b I,5,10 I,10,30 o,8,* o,2,+=æ                                                       
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 5) :  12åb += 10 * 30æ                                                                         
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 5) :  12åb += 10 * 30æ                                                                         
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 5) :  12åb += 10 * 30æ                                                                      
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 5) :   8åb+=10´30æ                                                                      

   COND       compound assignment                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "b = a = 125"                                                                                         i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :b = a = 125                                                                        
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) :  11åb a 125 = =æ                                                                       
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) :  21åv,b v,a I,125 o,= o,=æ                                                                      
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) :  31åv,0,b v,4,a I,8,125 o,6,= o,2,=æ                                                       
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 5) :  11åb = a = 125æ                                                                          
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 5) :  11åb = a = 125æ                                                                          
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 5) :  11åb = a = 125æ                                                                       
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 5) :   7åb=a=125æ                                                                       

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.034))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP    [Ãô]  (BASE) mathmatical expression complex                              0s   complex         yrpn_base__convert                                                           ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    

   COND       verify add/subtract are of equal precedence                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "10 - 3 + 2"                                                                                          i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :10 - 3 + 2                                                                         
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) :  10å10 3 - 2 +æ                                                                        
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) :  20åI,10 I,3 o,- I,2 o,+æ                                                                      
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) :  30åI,0,10 I,5,3 o,3,- I,9,2 o,7,+æ                                                       
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 5) :  10å10 - 3 + 2æ                                                                           
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 5) :  10å10 - 3 + 2æ                                                                           
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 5) :  10å10 - 3 + 2æ                                                                        
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 5) :   6å10-3+2æ                                                                        

   COND       verify add/subtract are of equal precedence, again                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a = 3 + 4 - 2 + 7"                                                                                   i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a = 3 + 4 - 2 + 7                                                                  
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 9) : ¬¬¬åa 3 4 + 2 - 7 + =æ                                                                 
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 9) : ¬¬¬åv,a I,3 I,4 o,+ I,2 o,- I,7 o,+ o,=æ                                               
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 9) : ¬¬¬åv,0,a I,4,3 I,8,4 o,6,+ I,12,2 o,10,- I,16,7 o,14,+ o,2,=æ                                               
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 9) : ¬¬¬åa = 3 + 4 - 2 + 7æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 9) : ¬¬¬åa = 3 + 4 - 2 + 7æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 9) : ¬¬¬åa = 3 + 4 - 2 + 7æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 9) : ¬¬¬åa=3+4-2+7æ                                                                             

   COND       another mixture                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a + b + c - d"                                                                                       i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a + b + c - d                                                                      
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 7) : ¬¬¬åa b + c + d -æ                                                                                  
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 7) : ¬¬¬åv,a v,b o,+ v,c o,+ v,d o,-æ                                                                                  
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 7) : ¬¬¬åv,0,a v,4,b o,2,+ v,8,c o,6,+ v,12,d o,10,-æ                                                                                   
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 7) : ¬¬¬åa + b + c - dæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 7) : ¬¬¬åa + b + c - dæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 7) : ¬¬¬åa + b + c - dæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 7) : ¬¬¬åa+b+c-dæ                                                                             

   COND       combination of addition and division                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a + b / c"                                                                                           i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a + b / c                                                                          
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) : ¬¬¬åa b c / +æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) : ¬¬¬åv,a v,b v,c o,/ o,+æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) : ¬¬¬åv,0,a v,4,b v,8,c o,6,/ o,2,+æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 5) : ¬¬¬åa + b / cæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 5) : ¬¬¬åa + b / cæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 5) : ¬¬¬åa + b / cæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 5) : ¬¬¬åa+b/cæ                                                                             

   COND       hard combination of suffix increment and plus                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a++ + b"                                                                                             i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a++ + b                                                                            
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 4) : ¬¬¬åa :+ b +æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 4) : ¬¬¬åv,a o,:+ v,b o,+æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 4) : ¬¬¬åv,0,a o,1,:+ v,6,b o,4,+æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 4) : ¬¬¬åa :+ + bæ                                                                     
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 4) : ¬¬¬åa ++ + bæ                                                                     
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 4) : ¬¬¬åa++ + bæ                                                                              
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 4) : ¬¬¬åa+++bæ                                                                              

   COND       hard combination of suffix increment and plus (no spaces)          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a+++b"                                                                                               i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a+++b                                                                              
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 4) : ¬¬¬åa :+ b +æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 4) : ¬¬¬åv,a o,:+ v,b o,+æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 4) : ¬¬¬åv,0,a o,1,:+ v,4,b o,3,+æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 4) : ¬¬¬åa :+ + bæ                                                                     
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 4) : ¬¬¬åa ++ + bæ                                                                     
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 4) : ¬¬¬åa++ + bæ                                                                              
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 4) : ¬¬¬åa+++bæ                                                                              

   COND       combination of prefix operators                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "+++c"                                                                                                i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :+++c                                                                               
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 3) : ¬¬¬åc +: ++æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 3) : ¬¬¬åv,c o,+: o,++æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 3) : ¬¬¬åv,3,c o,2,+: o,0,++æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 3) : ¬¬¬å++ +: cæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 3) : ¬¬¬å++ + cæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 3) : ¬¬¬å+++cæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 3) : ¬¬¬å+++cæ                                                                              

   COND       combine math and powers                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "aÆ + bÇ"                                                                                             i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :aÆ + bÇ                                                                            
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) : ¬¬¬åa Æ b Ç +æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) : ¬¬¬åv,a o,Æ v,b o,Ç o,+æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) : ¬¬¬åv,0,a o,1,Æ v,5,b o,6,Ç o,3,+æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 5) : ¬¬¬åa Æ + b Çæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 5) : ¬¬¬åa Æ + b Çæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 5) : ¬¬¬åaÆ + bÇæ                                                                              
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 5) : ¬¬¬åaÆ+bÇæ                                                                              

   COND       combine math and powers and grouping                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "(aÆ + bÇ)Î"                                                                                          i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :(aÆ + bÇ)Î                                                                         
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 6) : ¬¬¬åa Æ b Ç + Îæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 6) : ¬¬¬åv,a o,Æ v,b o,Ç o,+ o,Îæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 6) : ¬¬¬åv,1,a o,2,Æ v,6,b o,7,Ç o,4,+ o,9,Îæ                                                                              
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 8) : ¬¬¬å( a Æ + b Ç ) Îæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 8) : ¬¬¬å( a Æ + b Ç ) Îæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 8) : ¬¬¬å(aÆ + bÇ)Îæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 8) : ¬¬¬å(aÆ+bÇ)Îæ                                                                             

   COND       double exponent                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "aÆÎ"                                                                                                 i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :aÆÎ                                                                                
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 3) : ¬¬¬åa Æ Îæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 3) : ¬¬¬åv,a o,Æ o,Îæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 3) : ¬¬¬åv,0,a o,1,Æ o,2,Îæ                                                                              
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 3) : ¬¬¬åa Æ Îæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 3) : ¬¬¬åa Æ Îæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 3) : ¬¬¬åaÆÎæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 3) : ¬¬¬åaÆÎæ                                                                             

   COND       simple AND and OR                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.030))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a || b && c"                                                                                         i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a || b && c                                                                        
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) : ¬¬¬åa b c && ||æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) : ¬¬¬åv,a v,b v,c o,&& o,||æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) : ¬¬¬åv,0,a v,5,b v,10,c o,7,&& o,2,||æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 5) : ¬¬¬åa || b && cæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 5) : ¬¬¬åa || b && cæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 5) : ¬¬¬åa Ñ b Ð cæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 5) : ¬¬¬åaÑbÐcæ                                                                             

   COND       same with special symbols (convert back to traditional)            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.031))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a Ñ b Ð c"                                                                                           i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a Ñ b Ð c                                                                          
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) : ¬¬¬åa b c && ||æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) : ¬¬¬åv,a v,b v,c o,&& o,||æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) : ¬¬¬åv,0,a v,4,b v,8,c o,6,&& o,2,||æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 5) : ¬¬¬åa || b && cæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 5) : ¬¬¬åa || b && cæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 5) : ¬¬¬åa Ñ b Ð cæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 5) : ¬¬¬åaÑbÐcæ                                                                             

   COND       switch to NAND and NOR                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.032))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a Ó b Ô c Ò d"                                                                                       i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a Ó b Ô c Ò d                                                                      
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 7) : ¬¬¬åa b c !& |& d &|æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 7) : ¬¬¬åv,a v,b v,c o,!& o,|& v,d o,&|æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 7) : ¬¬¬åv,0,a v,4,b v,8,c o,6,!& o,2,|& v,12,d o,10,&|æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 7) : ¬¬¬åa |& b !& c &| dæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 7) : ¬¬¬åa |& b !& c &| dæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 7) : ¬¬¬åa Ó b Ô c Ò dæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 7) : ¬¬¬åaÓbÔcÒdæ                                                                              

   COND       same with c-bang symbols                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.033))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a |& b !& c &| d"                                                                                    i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a |& b !& c &| d                                                                   
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 7) : ¬¬¬åa b c !& |& d &|æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 7) : ¬¬¬åv,a v,b v,c o,!& o,|& v,d o,&|æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 7) : ¬¬¬åv,0,a v,5,b v,10,c o,7,!& o,2,|& v,15,d o,12,&|æ                                                                              
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 7) : ¬¬¬åa |& b !& c &| dæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 7) : ¬¬¬åa |& b !& c &| dæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 7) : ¬¬¬åa Ó b Ô c Ò dæ                                                                             
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 7) : ¬¬¬åaÓbÔcÒdæ                                                                              

   COND       verify handling function vs variable with same name                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.033))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "= n + n (0d2)"                                                                                       i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    := n + n (0d2)                                                                      
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) : ¬¬¬ån 0d2 n + =æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) : ¬¬¬åv,n @,0d2 1,n o,+ o,=æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) : ¬¬¬åv,2,n @,9,0d2 1,6,n o,4,+ o,0,=æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 7) : ¬¬¬å= n + n ( 0d2 )æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 7) : ¬¬¬å= n + n ( 0d2 )æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 7) : ¬¬¬å= n + n (0d2)æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 7) : ¬¬¬å=n+n(0d2)æ                                                                             

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.034))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    
     code     set the mode to compiler             - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP    [Ãô]  (BASE) mathmatical expression complex                              0s   hard            yrpn_base__convert                                                           ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    

   COND       CSCI270 : example one                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a+b*c-d/e*f"                                                                                         i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a+b*c-d/e*f                                                                        
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                             
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted(11) : ¬¬¬åa b c * + d e / f * -æ                                                                                        
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail (11) : ¬¬¬åv,a v,b v,c o,* o,+ v,d v,e o,/ v,f o,* o,-æ                                                                                                  
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  (11) : ¬¬¬åv,0,a v,2,b v,4,c o,3,* o,1,+ v,6,d v,8,e o,7,/ v,10,f o,9,* o,5,-æ                                                                                                             
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens (11) : ¬¬¬åa + b * c - d / e * fæ                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed (11) : ¬¬¬åa + b * c - d / e * fæ                                                                                            
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty (11) : ¬¬¬åa + b * c - d / e * fæ                                                                                          
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  (11) : ¬¬¬åa+b´c-d/e´fæ                                                                                      

   COND       CSCI270 : example two                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "(a+b*c-d)/(e*f)"                                                                                     i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :(a+b*c-d)/(e*f)                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 15                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :( a + b * c - d ) / ( e * f )                                                      
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 11                                                                                
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a b c * + d - e f * /                                                              
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :(a + b * c - d) / (e * f)                                                          

   COND       CSCI270 : variation                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.023))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a * (b + c) - d / e"                                                                                 i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a * (b + c) - d / e                                                                
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 11                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :a * ( b + c ) - d / e                                                              
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 9                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a b c + * d e / -                                                                  
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :a * (b + c) - d / e                                                                

   COND       combination of addition and multipication                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.024))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a + b * c - d"                                                                                       i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a + b * c - d                                                                      
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 7                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :a + b * c - d                                                                      
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a b c * + d -                                                                      
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :a + b * c - d                                                                      

   COND       combination of addition and multipication with parens              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.025))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a + b * (c + d)"                                                                                     i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a + b * (c + d)                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 9                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :a + b * ( c + d )                                                                  
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a b c d + * +                                                                      
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :a + b * (c + d)                                                                    

   COND       temple cis223 : example one                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.026))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "x - y * a + b / c"                                                                                   i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :x - y * a + b / c                                                                  
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 9                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :x - y * a + b / c                                                                  
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 9                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :x y a * - b c / +                                                                  
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :x - y * a + b / c                                                                  

   COND       temple cis223 : example two                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.027))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "3+5*6-7*(8+5)"                                                                                       i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :3+5*6-7*(8+5)                                                                      
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 13                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :3 + 5 * 6 - 7 * ( 8 + 5 )                                                          
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 11                                                                                
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :3 5 6 * + 7 8 5 + * -                                                              
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :3 + 5 * 6 - 7 * (8 + 5)                                                            

   COND       art of assemply : example one                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.028))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a = (x * y - z + t)/2.0"                                                                             i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :a = (x * y - z + t)/2.0                                                            
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 13                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :a = ( x * y - z + t ) / 2.0                                                        
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 11                                                                                
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a x y * z - t + 2.0 / =                                                            
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :a = (x * y - z + t) / 2.0                                                          

   COND       art of assemply : example two                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.029))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      check the operator                   yrpn_base__convert          "x = ((y-z)*a) - ( a + b * c)/3.14159"                                                                i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    :x = ((y-z)*a) - ( a + b * c)/3.14159                                               
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 21                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :x = ( ( y - z ) * a ) - ( a + b * c ) / 3.14159                                    
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 15                                                                                
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :x y z - a * a b c * + 3.14159 / - =                                                
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :x = ((y - z) * a) - (a + b * c) / 3.14159                                          

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.034))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP    [Ãô]  (BASE) interpreting unary operators competing with others          0s   unary           yrpn_base__convert                                                           ((02.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     set the compiler mode                - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 

   COND       internal plus                                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a + + b"                                                                                             i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :a + +: b                                                                           
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a b +: +                                                                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :a + +b                                                                             

   COND       internal minus                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a + - b"                                                                                             i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :a + -: b                                                                           
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a b -: +                                                                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :a + -b                                                                             

   COND       double negative                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a + - - b"                                                                                           i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 5                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :a + -: -: b                                                                        
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 5                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a b -: -: +                                                                        
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :a + --b                                                                            

   COND       leading minus                                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "-b"                                                                                                  i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 2                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :-: b                                                                               
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 2                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :b -:                                                                               
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :-b                                                                                 

   COND       leading minus outside parentheses                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "-(b)"                                                                                                i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :-: ( b )                                                                           
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 2                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :b -:                                                                               
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :-(b)                                                                               

   COND       leading minus before expression                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "-b*c+a"                                                                                              i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 6                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :-: b * c + a                                                                       
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 6                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :b -: c * a +                                                                       
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :-b * c + a                                                                         

   COND       leading minus outside parentheses                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "- (b + a)"                                                                                           i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 6                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :-: ( b + a )                                                                       
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :b a + -:                                                                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :-(b + a)                                                                           

   COND       using the logical not                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "!b"                                                                                                  i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 2                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :! b                                                                                
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 2                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :b !                                                                                
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :!b                                                                                 

   COND       using the logical not with an assignment                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "=!b"                                                                                                 i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 3                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     := ! b                                                                              
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 3                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :b ! =                                                                              
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := !b                                                                               

   COND       using an unary plus with an assignment                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "=+b"                                                                                                 i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 3                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     := +: b                                                                             
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 3                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :b +: =                                                                             
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := +b                                                                               

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    
     code     set the mode to compiler             - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (BASE) identifying line types                                      0s   line_type       yRPN_stack_tokens                                                            ((03.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     set the compiler mode                - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 

   COND       open statement                                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "a + b"                                                                                               i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 3                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :a + b                                                                              
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 3                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a b +                                                                              
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,a v,b o,+                                                                        
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :a + b                                                                              
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       completed statement                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "a + b;"                                                                                              i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :a + b ;                                                                            
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 3                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a b +                                                                              
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,a v,b o,+                                                                        
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :a + b;                                                                             
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : DONE normal statement                                                             

   COND       open variable definition                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "char c='-'"                                                                                          i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :char c = '-'                                                                       
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :char c '-' =                                                                       
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,char v,c C,'-' o,=                                                               
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :char c = '-'                                                                       
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN variable definition                                                          

   COND       completed variable definition                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "char c='-';"                                                                                         i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 5                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :char c = '-' ;                                                                     
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :char c '-' =                                                                       
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,char v,c C,'-' o,=                                                               
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :char c = '-';                                                                      
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : DONE variable definition                                                          

   COND       open external variable definition                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "extern char c"                                                                                       i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 3                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :extern char c                                                                      
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 3                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :extern char c                                                                      
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,extern t,char v,c                                                                
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :extern char c                                                                      
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN external variable definition                                                 

   COND       complete external variable definition                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "extern char c;"                                                                                      i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :extern char c ;                                                                    
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 3                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :extern char c                                                                      
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,extern t,char v,c                                                                
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :extern char c;                                                                     
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : DONE external variable definition                                                 

   COND       open function definition                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "int swap (int *a, int *b)"                                                                           i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 11                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :int swap ( int *: a , int *: b )                                                   
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 8                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :int int (*) a int (*) b swap                                                       
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,int p,int p,(*) v,a p,int p,(*) v,b 2,swap                                       
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :int swap (int *a, int *b)                                                          
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN function definition                                                          

   COND       completed function prototype                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "int swap (int *a, int *b);"                                                                          i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 12                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :int swap ( int *: a , int *: b ) ;                                                 
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 8                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :int int (*) a int (*) b swap                                                       
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,int p,int p,(*) v,a p,int p,(*) v,b 2,swap                                       
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :int swap (int *a, int *b);                                                         
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : DONE function prototype                                                           

   COND       completed function definition                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "int swap (int *a, int *b) {"                                                                         i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 12                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :int swap ( int *: a , int *: b ) {                                                 
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 8                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :int int (*) a int (*) b swap                                                       
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,int p,int p,(*) v,a p,int p,(*) v,b 2,swap                                       
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :int swap (int *a, int *b) {                                                        
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : DONE function definition                                                          

   COND       open function pointer (named args)                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "int (* swap) (int *a, int *b) "                                                                      i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 14                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :int ( *: swap ) ( int *: a , int *: b )                                            
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 9                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :int (> int (*) a int (*) b swap                                                    
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,int *,(> p,int p,(*) v,a p,int p,(*) v,b 2,swap                                  
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :int (*swap) (int *a, int *b)                                                       
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN function pointer definition                                                  

   COND       open function pointer (no named args)                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "int (* swap) (int *, int *)"                                                                         i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 14                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :int ( *: swap ) ( int *: ? , int *: ? )                                            
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 9                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :int (> int (*) ? int (*) ? swap                                                    
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,int *,(> p,int p,(*) v,? p,int p,(*) v,? 2,swap                                  
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :int (*swap) (int *, int *)                                                         
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN function pointer definition                                                  

   COND       complete function pointer (no named args)                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "int (* swap) (int *, int *);"                                                                        i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 15                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :int ( *: swap ) ( int *: ? , int *: ? ) ;                                          
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 9                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :int (> int (*) ? int (*) ? swap                                                    
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,int *,(> p,int p,(*) v,? p,int p,(*) v,? 2,swap                                  
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :int (*swap) (int *, int *);                                                        
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : DONE function pointer definition                                                  

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    
     code     set the mode to compiler             - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (BASE) pointer operations (compilier)                              0s   pointer         yrpn_base__convert                                                           ((04.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     set the compiler mode                - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 

   COND       variable address-of                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "&a"                                                                                                  i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 2                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :&: a                                                                               
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 2                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a &:                                                                               
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,a o,&:                                                                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :&a                                                                                 
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       dereferencing a pointer                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "*b"                                                                                                  i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 2                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :*: b                                                                               
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 2                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :b *:                                                                               
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,b o,*:                                                                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :*b                                                                                 
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       assigning a dereferenced pointer                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "c=*b"                                                                                                i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :c = *: b                                                                           
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :c b *: =                                                                           
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,c v,b o,*: o,=                                                                   
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :c = *b                                                                             
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       both reference and dereference                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "b=*&a"                                                                                               i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 5                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :b = *: &: a                                                                        
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 5                                                                                 
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,b v,a o,&: o,*: o,=                                                              
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :b = *&a                                                                            
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       both reference and dereference                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "b=*a+c"                                                                                              i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 6                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :b = *: a + c                                                                       
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 6                                                                                 
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,b v,a o,*: v,c o,+ o,=                                                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :b = *a + c                                                                         
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       common increment to a pointer                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "++*x_count"                                                                                          i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 3                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :++ *: x_count                                                                      
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 3                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :x_count *: ++                                                                      
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,x_count o,*: o,++                                                                
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :++*x_count                                                                         
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       more complicated combination                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "b=!++*&a"                                                                                            i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 7                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :b = ! ++ *: &: a                                                                   
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :b a &: *: ++ ! =                                                                   
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,b v,a o,&: o,*: o,++ o,! o,=                                                     
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :b = !++*&a                                                                         
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       more complicated combination with parens                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "b=!(++(*(&a)))"                                                                                      i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 13                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :b = ! ( ++ ( *: ( &: a ) ) )                                                       
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :b a &: *: ++ ! =                                                                   
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,b v,a o,&: o,*: o,++ o,! o,=                                                     
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :b = !(++(*(&a)))                                                                   
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       use a pointer arrow                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "++cell->count"                                                                                       i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :++ cell -> count                                                                   
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :cell count -> ++                                                                   
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,cell m,count o,-> o,++                                                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :++cellÖcount                                                                       
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       use a pointer dot                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "++cell.count"                                                                                        i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :++ cell . count                                                                    
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :cell count . ++                                                                    
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,cell m,count o,. o,++                                                            
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :++cell.count                                                                       
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       and some math                                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "c = ++cell.count * link->next"                                                                       i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 10                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :c = ++ cell . count * link -> next                                                 
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 10                                                                                
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :c cell count . ++ link next -> * =                                                 
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,c v,cell m,count o,. o,++ v,link m,next o,-> o,* o,=                             
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :c = ++cell.count * linkÖnext                                                       
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       pointer math before dereference                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "p = *(data + i)"                                                                                     i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 8                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :p = *: ( data + i )                                                                
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 6                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :p data i + *: =                                                                    
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,p v,data v,i o,+ o,*: o,=                                                        
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :p = *(data + i)                                                                    
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       function call to swap variables                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "cyclicSwap (&a, &b, &c);"                                                                            i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 12                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :cyclicSwap ( &: a , &: b , &: c ) ;                                                
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a &: b &: c &: cyclicSwap                                                          
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,a o,&: v,b o,&: v,c o,&: 3,cyclicSwap                                            
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :cyclicSwap (&a, &b, &c);                                                           
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : DONE normal statement                                                             

   COND       function def to swap variables                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "void cyclicSwap (int *a, int *b, int *c)"                                                            i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 15                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :void cyclicSwap ( int *: a , int *: b , int *: c )                                 
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 11                                                                                
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :void int (*) a int (*) b int (*) c cyclicSwap                                      
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,void p,int p,(*) v,a p,int p,(*) v,b p,int p,(*) v,c 3,cyclicSwap                
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :void cyclicSwap (int *a, int *b, int *c)                                           
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN function definition                                                          

   COND       pointer casting                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "data = (float*) calloc(num,sizeof(float))"                                                           i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 15                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :data = ( float *: ) calloc ( num , sizeof ( float ) )                              
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 8                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :data num float sizeof calloc (*) float =                                           
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,data v,num t,float k,sizeof 2,calloc c,(*) c,float o,=                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :data = (float *) calloc (num, sizeof (float))                                      
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       dereference comparision                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "if (*data < *(data + i))"                                                                            i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 12                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :if ( *: data < *: ( data + i ) )                                                   
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 8                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"     ,   0                                                                                    s_equal     postfix output   :data *: data i + *: < if                                                           
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,data o,*: v,data v,i o,+ o,*: o,< k,if                                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :if (*data < *(data + i))                                                           
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       pointer definition                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "float *data = NULL"                                                                                  i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 5                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :float *: data = NULL                                                               
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 5                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"     ,   0                                                                                    s_equal     postfix output   :float (*) data NULL =                                                              
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :t,float t,(*) v,data v,NULL o,=                                                    
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :float *data = NULL                                                                 
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN variable definition                                                          

   COND       pointer definition and assignment                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "char *chptr = &ch"                                                                                   i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 6                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :char *: chptr = &: ch                                                              
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 6                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"     ,   0                                                                                    s_equal     postfix output   :char (*) chptr ch &: =                                                             
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :t,char t,(*) v,chptr v,ch o,&: o,=                                                 
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :char *chptr = &ch                                                                  
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN variable definition                                                          

   COND       var definition and pointer assignment                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "char t = *chptr"                                                                                     i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 5                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :char t = *: chptr                                                                  
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 5                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"     ,   0                                                                                    s_equal     postfix output   :char t chptr *: =                                                                  
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :t,char v,t v,chptr o,*: o,=                                                        
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :char t = *chptr                                                                    
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN variable definition                                                          

   COND       constant pointer                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "char *const ptr = &ch"                                                                               i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 7                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :char *: const ptr = &: ch                                                          
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"     ,   0                                                                                    s_equal     postfix output   :char (*) const ptr ch &: =                                                         
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :t,char t,(*) t,const v,ptr v,ch o,&: o,=                                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :char *const ptr = &ch                                                              
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN variable definition                                                          

   COND       pointer to a pointer                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "char **p2 = &p1"                                                                                     i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 7                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :char *: *: p2 = &: p1                                                              
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :char (*) (*) p2 p1 &: =                                                            
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :t,char t,(*) t,(*) v,p2 v,p1 o,&: o,=                                              
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :char **p2 = &p1                                                                    
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN variable definition                                                          

   COND       array of pointers                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.023))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "char *ptr [10]"                                                                                      i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 6                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :char *: ptr [ 10 ]                                                                 
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 5                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :char (*) ptr 10 ]                                                                  
     get      output -- postfix detail             yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,char t,(*) v,ptr I,10 o,]                                                        
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :char *ptr [10]                                                                     
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN variable definition                                                          

   COND       function pointer definition                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.024))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "int (* func) (int, int)"                                                                             i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 12                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :int ( *: func ) ( int ? , int ? )                                                  
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :int (> int ? int ? func                                                            
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :t,int *,(> p,int v,? p,int v,? 2,func                                              
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :int (*func) (int, int)                                                             
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN function pointer definition                                                  

   COND       pointer to a constant                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.025))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "const char *ptr = &ch"                                                                               i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 7                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :const char *: ptr = &: ch                                                          
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :const char (*) ptr ch &: =                                                         
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :t,const t,char t,(*) v,ptr v,ch o,&: o,=                                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :const char *ptr = &ch                                                              
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN variable definition                                                          

   COND       dereference move                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.026))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "*data = *(data + i)"                                                                                 i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 9                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :*: data = *: ( data + i )                                                          
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :data *: data i + *: =                                                              
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,data o,*: v,data v,i o,+ o,*: o,=                                                
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :*data = *(data + i)                                                                
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       printf example (member of)                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.027))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "printf(\"%d\", stobj.a)"                                                                             i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 8                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :printf ( ¶%d¶ , stobj . a )                                                      
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 5                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :¶%d¶ stobj a . printf                                                            
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :S,¶%d¶ v,stobj m,a o,. 2,printf                                                  
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :printf (¶%d¶, stobj.a)                                                           
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       printf example (member pointer)                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.028))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "printf(\"%d\", stobj->a)"                                                                            i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 8                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :printf ( ¶%d¶ , stobj -> a )                                                     
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 5                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :¶%d¶ stobj a -> printf                                                           
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :S,¶%d¶ v,stobj m,a o,-> 2,printf                                                 
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :printf (¶%d¶, stobjÖa)                                                           
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       printf example (dereference)                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.029))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "printf(\"[%c]\", *chptr)"                                                                            i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 7                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :printf ( ¶[%c]¶ , *: chptr )                                                     
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :¶[%c]¶ chptr *: printf                                                           
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :S,¶[%c]¶ v,chptr o,*: 2,printf                                                   
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :printf (¶[%c]¶, *chptr)                                                          
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       scanf example                                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.030))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "scanf(\"%d %d\", &col1, &col2)"                                                                      i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 10                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :scanf ( ¶%d %d¶ , &: col1 , &: col2 )                                            
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 6                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :¶%d %d¶ col1 &: col2 &: scanf                                                    
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :S,¶%d %d¶ v,col1 o,&: v,col2 o,&: 3,scanf                                        
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :scanf (¶%d %d¶, &col1, &col2)                                                    
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       scanf example on array                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.031))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "scanf(\"%f\", &data[i])"                                                                             i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 10                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :scanf ( ¶%f¶ , &: data [ i ] )                                                   
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 6                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :¶%f¶ data i ] &: scanf                                                           
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :S,¶%f¶ v,data v,i o,] o,&: 2,scanf                                               
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :scanf (¶%f¶, &data [i])                                                          
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       scanf example on matrix                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.032))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "scanf(\"%d\", &a[i][j])"                                                                             i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 13                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :scanf ( ¶%d¶ , &: a [ i ] [ j ] )                                                
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 8                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :¶%d¶ a i ] j ] &: scanf                                                          
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :S,¶%d¶ v,a v,i o,] v,j o,] o,&: 2,scanf                                          
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :scanf (¶%d¶, &a [i] [j])                                                         
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       pointer assignment                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.033))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "*a = b"                                                                                              i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :*: a = b                                                                           
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a *: b =                                                                           
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,a o,*: v,b o,=                                                                   
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :*a = b                                                                             
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       pointer to member                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.034))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "foo.size    = 42"                                                                                    i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 5                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :foo . size = 42                                                                    
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 5                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :foo size . 42 =                                                                    
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,foo m,size o,. I,42 o,=                                                          
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :foo.size = 42                                                                      
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       pointer to member                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.035))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "(*ptr).size = 42"                                                                                    i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 8                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :( *: ptr ) . size = 42                                                             
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 6                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :ptr *: size . 42 =                                                                 
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,ptr o,*: m,size o,. I,42 o,=                                                     
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :(*ptr).size = 42                                                                   
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       pointer to pointer to member                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.036))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "(**ptr).size = 42"                                                                                   i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 9                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :( *: *: ptr ) . size = 42                                                          
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :ptr *: *: size . 42 =                                                              
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,ptr o,*: o,*: m,size o,. I,42 o,=                                                
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :(**ptr).size = 42                                                                  
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       pointer to pointer to pointer assignment                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.037))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "***ptr = 976"                                                                                        i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 6                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :*: *: *: ptr = 976                                                                 
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 6                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :ptr *: *: *: 976 =                                                                 
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,ptr o,*: o,*: o,*: I,976 o,=                                                     
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :***ptr = 976                                                                       
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       strlen like example                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.038))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "while (*(str++)))"                                                                                   i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 9                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :while ( *: ( str :+ ) ) )                                                          
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :str :+ *: while                                                                    
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,str o,:+ o,*: k,while                                                            
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :while (*(str++)))                                                                  
     get      check line type decision             yRPN_stack_unit             "line_type"  ,   0                                                                                    s_equal     source decision  : OPEN normal statement                                                             

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.039))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    
     code     set the mode to compiler             - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (BASE) bitwise operations (compilier)                              0s   bitwise         yrpn_base__convert                                                           ((05.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     set the compiler mode                - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 

   COND       simple bitwise AND                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "a & 1"                                                                                               i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 3                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :a & 1                                                                              
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 3                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a 1 &                                                                              
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,a I,1 o,&                                                                        
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :a & 1                                                                              

   COND       simple bitwise OR                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "a | 1"                                                                                               i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 3                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :a | 1                                                                              
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 3                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a 1 |                                                                              
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,a I,1 o,|                                                                        
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :a | 1                                                                              

   COND       simple bitwise XOR                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "a ^ 1"                                                                                               i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 3                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :a ^ 1                                                                              
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 3                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a 1 ^                                                                              
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,a I,1 o,^                                                                        
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :a ^ 1                                                                              

   COND       simple bitwise NOT                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "~a"                                                                                                  i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 2                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :~ a                                                                                
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 2                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a ~                                                                                
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,a o,~                                                                            
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :~a                                                                                 

   COND       bitwise versus comparison                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "(a & 1 == c >> 2)"                                                                                   i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 9                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :( a & 1 == c >> 2 )                                                                
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a 1 c 2 >> == &                                                                    
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,a I,1 v,c I,2 o,>> o,== o,&                                                      
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :(a & 1 à c >> 2)                                                                   

   COND       bitwise versus comparison with parens                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     feed in the expression               yrpn_base__convert          "((a & 1) == (c >> 2))"                                                                               i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 13                                                                                
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :( ( a & 1 ) == ( c >> 2 ) )                                                        
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :a 1 & c 2 >> ==                                                                    
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,a I,1 o,& v,c I,2 o,>> o,==                                                      
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :((a & 1) à (c >> 2))                                                               

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((05.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    
     code     set the mode to compiler             - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (BASE) simple functions (spreadsheet)                              0s   function        yrpn_base__convert                                                           ((06.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     set the compiler mode                - - - - - - - - - - - - -   myRPN.lang   = YRPN_GYGES;                                                                                                                                                                                                 

   COND       try a simple, one-parameter function                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "sin (a)"                                                                                             i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 2) : ¬¬¬åa sinæ                                                                          
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 2) : ¬¬¬åv,a 1,sinæ                                                                        
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 2) : ¬¬¬åv,5,a 1,0,sinæ                                                                       
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 4) : ¬¬¬åsin ( a )æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 4) : ¬¬¬åsin ( a )æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 4) : ¬¬¬åsin (a)æ                                                                          
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 4) : ¬¬¬åsin(a)æ                                                                       
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 2) : ¬¬¬åsin(a)æ                                                                       

   COND       try two formulas with an operator between                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "sin (a) * cos (b)"                                                                                   i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) : ¬¬¬åa sin b cos *æ                                                                          
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) : ¬¬¬åv,a 1,sin v,b 1,cos o,*æ                                                                        
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) : ¬¬¬åv,5,a 1,0,sin v,15,b 1,10,cos o,8,*æ                                                                       
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 9) : ¬¬¬åsin ( a ) * cos ( b )æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 9) : ¬¬¬åsin ( a ) * cos ( b )æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 9) : ¬¬¬åsin (a) * cos (b)æ                                                                          
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 9) : ¬¬¬åsin(a)´cos(b)æ                                                                       
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 5) : ¬¬¬å(sin(a))´(cos(b))æ                                                                       

   COND       try a two-parameter function                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "logger(var1, 35)"                                                                                    i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 3) : ¬¬¬åvar1 35 loggeræ                                                                          
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 3) : ¬¬¬åv,var1 I,35 2,loggeræ                                                                        
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 3) : ¬¬¬åv,7,var1 I,13,35 2,0,loggeræ                                                                       
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 6) : ¬¬¬ålogger ( var1 , 35 )æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 6) : ¬¬¬ålogger ( var1 , 35 )æ                                                                             
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 6) : ¬¬¬ålogger (var1, 35)æ                                                                          
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 6) : ¬¬¬ålogger(var1,35)æ                                                                       
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 3) : ¬¬¬ålogger(var1,35)æ                                                                       

   COND       try a four-parameter function                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "g_arc (12.2, 15.8, 30, t)"                                                                           i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) : ¬¬¬å12.2 15.8 30 t g_arcæ                                                                                        
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) : ¬¬¬åF,12.2 F,15.8 I,30 v,t 4,g_arcæ                                                                                            
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) : ¬¬¬åF,7,12.2 F,13,15.8 I,19,30 v,23,t 4,0,g_arcæ                                                                                                   
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens (10) : ¬¬¬åg_arc ( 12.2 , 15.8 , 30 , t )æ                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed (10) : ¬¬¬åg_arc ( 12.2 , 15.8 , 30 , t )æ                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty (10) : ¬¬¬åg_arc (12.2, 15.8, 30, t)æ                                                                                            
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  (10) : ¬¬¬åg_arc(12.2,15.8,30,t)æ                                                                                      
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 5) : ¬¬¬åg_arc(12.2,15.8,30,t)æ                                                                                      

   COND       try a one-parameter with a string literal                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "puts (\"testing\")"                                                                                  i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 2) : ¬¬¬å¶testing¶ putsæ                                                                                        
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 2) : ¬¬¬åS,¶testing¶ 1,putsæ                                                                                            
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 2) : ¬¬¬åS,6,¶testing¶ 1,0,putsæ                                                                                                   
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 4) : ¬¬¬åputs ( ¶testing¶ )æ                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 4) : ¬¬¬åputs ( ¶testing¶ )æ                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 4) : ¬¬¬åputs (¶testing¶)æ                                                                                           
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 4) : ¬¬¬åputs(¶testing¶)æ                                                                                      
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 2) : ¬¬¬åputs(¶testing¶)æ                                                                                      

   COND       try a one-parameter with a string literal with spaces              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "puts (\"test one two three\")"                                                                       i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 2) : ¬¬¬å¶test one two three¶ putsæ                                                                                        
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 2) : ¬¬¬åS,¶test one two three¶ 1,putsæ                                                                                            
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 2) : ¬¬¬åS,6,¶test one two three¶ 1,0,putsæ                                                                                                   
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 4) : ¬¬¬åputs ( ¶test one two three¶ )æ                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 4) : ¬¬¬åputs ( ¶test one two three¶ )æ                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 4) : ¬¬¬åputs (¶test one two three¶)æ                                                                                           
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 4) : ¬¬¬åputs(¶test one two three¶)æ                                                                                      
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 2) : ¬¬¬åputs(¶test one two three¶)æ                                                                                      

   COND       try a one-parameter with a constant literal                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "putchar (' ')"                                                                                       i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 2) : ¬¬¬å' ' putcharæ                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 2) : ¬¬¬åC,' ' 1,putcharæ                                                                                                                        
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 2) : ¬¬¬åC,9,' ' 1,0,putcharæ                                                                                                                                     
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 4) : ¬¬¬åputchar ( ' ' )æ                                                                                                                              
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 4) : ¬¬¬åputchar ( ' ' )æ                                                                                                                               
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 4) : ¬¬¬åputchar (' ')æ                                                                                                                       
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 4) : ¬¬¬åputchar(' ')æ                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 2) : ¬¬¬åputchar(' ')æ                                                                                                                 

   COND       function with no arguments                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a = func()"                                                                                          i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 3) : ¬¬¬åa func =æ                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 3) : ¬¬¬åv,a 0,func o,=æ                                                                                                                          
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 3) : ¬¬¬åv,0,a 0,4,func o,2,=æ                                                                                                                                    
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 5) : ¬¬¬åa = func ( )æ                                                                                                                              
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 5) : ¬¬¬åa = func ( )æ                                                                                                                               
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 5) : ¬¬¬åa = func ()æ                                                                                                                       
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 5) : ¬¬¬åa=func()æ                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 3) : ¬¬¬åa=(func())æ                                                                                                                 

   COND       assignments and equality                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "a = func() == 3"                                                                                     i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) : ¬¬¬åa func 3 == =æ                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) : ¬¬¬åv,a 0,func I,3 o,== o,=æ                                                                                                                          
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) : ¬¬¬åv,0,a 0,4,func I,14,3 o,11,== o,2,=æ                                                                                                                                     
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 7) : ¬¬¬åa = func ( ) == 3æ                                                                                                                              
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 7) : ¬¬¬åa = func ( ) == 3æ                                                                                                                               
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 7) : ¬¬¬åa = func () à 3æ                                                                                                                       
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 7) : ¬¬¬åa=func()à3æ                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 5) : ¬¬¬åa=((func())==3)æ                                                                                                                 

   COND       assignments and equality with parens                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "(a = func()) == 3"                                                                                   i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) : ¬¬¬åa func = 3 ==æ                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) : ¬¬¬åv,a 0,func o,= I,3 o,==æ                                                                                                                          
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) : ¬¬¬åv,1,a 0,5,func o,3,= I,16,3 o,13,==æ                                                                                                                                     
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 9) : ¬¬¬å( a = func ( ) ) == 3æ                                                                                                                              
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 9) : ¬¬¬å( a = func ( ) ) == 3æ                                                                                                                               
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 9) : ¬¬¬å(a = func ()) à 3æ                                                                                                                       
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 9) : ¬¬¬å(a=func())à3æ                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 5) : ¬¬¬å(a=(func()))==3æ                                                                                                                 

   COND       verify complex arguments, but only one level                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "f(a*b,c+d+e,g)-h"                                                                                    i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted(12) : ¬¬¬åa b * c d + e + g f h -æ                                                                                          
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail (12) : ¬¬¬åv,a v,b o,* v,c v,d o,+ v,e o,+ v,g 3,f v,h o,-æ                                                                                                                          
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  (12) : ¬¬¬åv,2,a v,4,b o,3,* v,6,c v,8,d o,7,+ v,10,e o,9,+ v,12,g 3,0,f v,15,h o,14,-æ                                                                                                                                     
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens (16) : ¬¬¬åf ( a * b , c + d + e , g ) - hæ                                                                                                                               
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed (16) : ¬¬¬åf ( a * b , c + d + e , g ) - hæ                                                                                                                                                
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty (16) : ¬¬¬åf (a * b, c + d + e, g) - hæ                                                                                                                       
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  (16) : ¬¬¬åf(a´b,c+d+e,g)-hæ                                                                                                                
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  (12) : ¬¬¬å(f((a´b),((c+d)+e),g))-hæ                                                                                                                 

   COND       functions using other functions values                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "strncpy (x_dst, x_src, strlen (x_src))"                                                              i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 5) : ¬¬¬åx_dst x_src x_src strlen strncpyæ                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 5) : ¬¬¬åv,x_dst v,x_src v,x_src 1,strlen 3,strncpyæ                                                                                                                          
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 5) : ¬¬¬åv,9,x_dst v,16,x_src v,31,x_src 1,23,strlen 3,0,strncpyæ                                                                                                                                     
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens (11) : ¬¬¬åstrncpy ( x_dst , x_src , strlen ( x_src ) )æ                                                                                                                              
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed (11) : ¬¬¬åstrncpy ( x_dst , x_src , strlen ( x_src ) )æ                                                                                                                               
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty (11) : ¬¬¬åstrncpy (x_dst, x_src, strlen (x_src))æ                                                                                                                       
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  (11) : ¬¬¬åstrncpy(x_dst,x_src,strlen(x_src))æ                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 5) : ¬¬¬åstrncpy(x_dst,x_src,(strlen(x_src)))æ                                                                                                                 


   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((06.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    
     code     set the mode to compiler             - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (BASE) variable declarations (compilier)                           0s   declare         yrpn_base__convert                                                           ((07.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     set the compiler mode                - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 
     code     set the pre-processor mode           - - - - - - - - - - - - -   myRPN.pproc    = S_PPROC_NO;                                                                                                                                                                                               

   COND       try a variable declaration                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "int     first"                                                                                       i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 2                                                                                 
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 2                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :int first                                                                          
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :int first                                                                          

   COND       try a multiple declaration                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "int     first, second"                                                                               i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 3                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :int first second                                                                   
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :int first, second                                                                  

   COND       try a declaration with initializer                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "int     first  = 2145"                                                                               i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :int first 2145 =                                                                   
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :int first = 2145                                                                   

   COND       try a declaration with initializer, and another                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "int     first  = 2145, second = 5150"                                                                i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 8                                                                                 
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 7                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :int first 2145 = second 5150 =                                                     
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :int first = 2145, second = 5150                                                    

   COND       modified declaration                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "long long b"                                                                                         i_equal     0                                                                                                    
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :long long b                                                                        
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,long t,long v,b                                                                  
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :long long b                                                                        

   COND       pointer declaration                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "long *c"                                                                                             i_equal     0                                                                                                    
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :long (*) c                                                                         
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,long t,(*) v,c                                                                   
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :long *c                                                                            

   COND       double pointer declaration                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "long **c"                                                                                            i_equal     0                                                                                                    
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :long (*) (*) c                                                                     
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,long t,(*) t,(*) v,c                                                             
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :long **c                                                                           

   COND       mixed pointer and variable declaration                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "char *d, e, **f"                                                                                     i_equal     0                                                                                                    
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :char (*) d e (*) (*) f                                                             
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,char t,(*) v,d v,e t,(*) t,(*) v,f                                               
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :char *d, e, **f                                                                    

   COND       array declaration                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "double g [10]"                                                                                       i_equal     0                                                                                                    
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :double g 10 ]                                                                      
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,double v,g I,10 o,]                                                              
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :double g [10]                                                                      

   COND       array declaration with calculated dimension                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "double i [k * 10]"                                                                                   i_equal     0                                                                                                    
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :double i k 10 * ]                                                                  
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,double v,i v,k I,10 o,* o,]                                                      
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :double i [k * 10]                                                                  

   COND       matrix declaration                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "double h [10][20]"                                                                                   i_equal     0                                                                                                    
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :double h 10 ] 20 ]                                                                 
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :t,double v,h I,10 o,] I,20 o,]                                                     
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :double h [10] [20]                                                                 

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((07.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    
     code     set the mode to compiler             - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (BASE) expressions with addresses                                  0s   address         yrpn_base__convert                                                           ((08.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((08.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     set the compiler mode                - - - - - - - - - - - - -   myRPN.lang   = YRPN_GYGES;                                                                                                                                                                                                 

   COND       very simple address expression                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((08.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "=b10"                                                                                                i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 2                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     := 0b10                                                                             
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 2                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :0b10 =                                                                             
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :@,0b10 o,=                                                                         
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := 0b10                                                                             

   COND       address with addition                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((08.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "= 1 + d15"                                                                                           i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     := 1 + 0d15                                                                         
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :1 0d15 + =                                                                         
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :I,1 @,0d15 o,+ o,=                                                                 
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := 1 + 0d15                                                                         

   COND       big address with some grouping                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((08.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "= (5ac200 + 5) * 4.2"                                                                                i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 8                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     := ( 5ac200 + 5 ) * 4.2                                                             
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 6                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :5ac200 5 + 4.2 * =                                                                 
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :@,5ac200 I,5 o,+ F,4.2 o,* o,=                                                     
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := (5ac200 + 5) * 4.2                                                               

   COND       verify with non-numeric tab                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((08.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "=Ab5"                                                                                                i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 2                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     := Ab5                                                                              
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 2                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :Ab5 =                                                                              
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :@,Ab5 o,=                                                                          

   COND       adding two addresses                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((08.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "= d15 + e27"                                                                                         i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     := 0d15 + 0e27                                                                      
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :0d15 0e27 + =                                                                      
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :@,0d15 @,0e27 o,+ o,=                                                              
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := 0d15 + 0e27                                                                      

   COND       address with division                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((08.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "= a1 / 3"                                                                                            i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     := 0a1 / 3                                                                          
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :0a1 3 / =                                                                          
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :@,0a1 I,3 o,/ o,=                                                                  
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := 0a1 / 3                                                                          

   COND       try a normal range formula                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((08.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "=sum(a15..a35)"                                                                                      i_equal     0                                                                                                    
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 5                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :0a15 0a35 .. sum =                                                                 
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :@,0a15 @,0a35 o,.. 1,sum o,=                                                       
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := sum (0a15..0a35)                                                                 

   COND       verify with absolute reference                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((08.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "=b$10"                                                                                               i_equal     0                                                                                                    
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 2                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     := 0b$10                                                                            
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 2                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :0b10 =                                                                             
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :@,0b10 o,=                                                                         
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := 0b$10                                                                            

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((08.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    
     code     set the mode to compiler             - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (BASE) expressions with constants                                  0s   constant        yrpn_base__convert                                                           ((09.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((09.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     set the compiler mode                - - - - - - - - - - - - -   myRPN.lang   = YRPN_GYGES;                                                                                                                                                                                                 

   COND       add a basic constant                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((09.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "=b10 + PI"                                                                                           i_equal     0                                                                                                    
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :0b10 PI + =                                                                        
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :@,0b10 v,PI o,+ o,=                                                                
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := 0b10 + PI                                                                        

   COND       add a greek constant (really var)                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((09.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "=b10 + ÷"                                                                                            i_equal     0                                                                                                    
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :0b10 ÷ + =                                                                         
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :@,0b10 v,÷ o,+ o,=                                                                 
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := 0b10 + ÷                                                                         

   COND       use a second constant                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((09.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "=TRUE + 2.5"                                                                                         i_equal     0                                                                                                    
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :TRUE 2.5 + =                                                                       
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,TRUE F,2.5 o,+ o,=                                                               
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := TRUE + 2.5                                                                       

   COND       undefined constant                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((09.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yrpn_base__convert          "=TRUTHY + 2.5"                                                                                       i_equal     0                                                                                                    
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :TRUTHY 2.5 + =                                                                     
     get      output -- postfix detail (value)     yrpn__unit                  "detail"   ,     0                                                                                    s_equal     postfix detail   :v,TRUTHY F,2.5 o,+ o,=                                                             
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    := TRUTHY + 2.5                                                                     

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((09.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    
     code     set the mode to compiler             - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (BASE) verify error reporting                                      0s   errors          yRPN_spreadsheet                                                             ((10.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     set the compiler mode                - - - - - - - - - - - - -   myRPN.lang   = YRPN_GYGES;                                                                                                                                                                                                 

   COND       quick, successful rpn                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yRPN_interpret              " 10 - 3 + 2"                         , NULL, NULL, 2000, 0                                          i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    : 10 - 3 + 2                                                                        
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 5                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :10,-,3,+,2                                                                         
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 5                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"     ,   0                                                                                    s_equal     postfix output   :10 3 - 2 +                                                                         
     get      output -- postfix detail (value)     yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :I,10 I,3 o,- I,2 o,+                                                               
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :10 - 3 + 2                                                                         
     get      position indicator                   yrpn__unit                  "position"   ,   0                                                                                    s_equal     source position  :  11 of  11                                                                        

   COND       will cause a stack failure  (HIDDEN)                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yRPN_interpret              " 10 - 3 +"                           , NULL, NULL, 2000, 0                                          i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    : 10 - 3 +                                                                          
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 4                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :10,-,3,+                                                                           
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"     ,   0                                                                                    s_equal     postfix output   :10 3 - +                                                                           
     get      output -- postfix detail (value)     yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :I,10 I,3 o,- o,+                                                                   
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :10 - 3 +                                                                           
     get      position indicator                   yrpn__unit                  "position"   ,   0                                                                                    s_equal     source position  :   9 of   9                                                                        

   COND       illegal spreadsheet operator                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yRPN_interpret              " 10 Û 3 + 2"                         , NULL, NULL, 2000, 0                                          i_lesser    0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    : 10 Û 3 + 2                                                                        
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 0                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :((null))                                                                           
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 0                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"     ,   0                                                                                    s_equal     postfix output   :((null))                                                                           
     get      output -- postfix detail (value)     yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :((null))                                                                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :((null))                                                                           
     get      position indicator                   yrpn__unit                  "position"   ,   0                                                                                    s_equal     source position  :   4 of  11                                                                        

   COND       extended character                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check the operator                   yRPN_interpret              " 10 -  + 2"                         , NULL, NULL, 2000, 0                                          i_lesser    0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    : 10 -  + 2                                                                        
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 0                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :((null))                                                                           
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 0                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"     ,   0                                                                                    s_equal     postfix output   :((null))                                                                           
     get      output -- postfix detail (value)     yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :((null))                                                                           
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :((null))                                                                           
     get      position indicator                   yrpn__unit                  "position"   ,   0                                                                                    s_equal     source position  :   6 of  11                                                                        

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    
     code     set the mode to compiler             - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (BASE) verify output of gyges version                              0s   gyges           yRPN_gyges                                                                   ((10.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     set the compiler mode                - - - - - - - - - - - - -   myRPN.lang   = YRPN_GYGES;                                                                                                                                                                                                 
     local    create a working/return variable     - - - - - - - - - - - - -   char  x_rpn   [LEN_RECD] = "";                                                                                                                                                                                             
     local    create a working/return variable     - - - - - - - - - - - - -   int   x_nrpn  = 0;                                                                                                                                                                                                         

   COND       verify quick run                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     generate rpn                         yRPN_gyges                  "= n + n (0d2)"                                                     , &x_rpn, &x_nrpn, LEN_RECD, 0    i_equal     0                                                                                                    
     get      original input string                yrpn__unit                  "source"     ,   0                                                                                    s_equal     source string    : n + n (0d2)                                                                      
     get      output -- infix count                yrpn__unit                  "n_tokens"   ,   0                                                                                    s_equal     infix count      : 6                                                                                 
     get      output -- infix tokenization         yrpn__unit                  "tokens"     ,   0                                                                                    s_equal     infix output     :n + n ( 0d2 )                                                                    
     get      output -- postfix count              yrpn__unit                  "n_detail"   ,   0                                                                                    s_equal     postfix count    : 4                                                                                 
     get      output -- postfix summary            yrpn__unit                  "output"   ,     0                                                                                    s_equal     postfix output   :n0d2n+                                                                          
     get      output -- postfix detail             yrpn__unit                  "detail"     ,   0                                                                                    s_equal     postfix detail   :v,n@,0d21,no,+                                                                  
     get      output -- pretty                     yrpn__unit                  "pretty"     ,   0                                                                                    s_equal     pretty output    :n + n (0d2)                                                                      



   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    
     code     set the mode to compiler             - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (BASE) verify output of gyges version (math mode)                  0s   math            yRPN_gyges                                                                   ((10.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       setup some testing variables                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     prepare for testing                  yrpn__unit_quiet                                                                                                                  i_equal     0                                                                                                    
     code     set the compiler mode                - - - - - - - - - - - - -   myRPN.lang   = YRPN_GYGES;                                                                                                                                                                                                 
     local    create a working/return variable     - - - - - - - - - - - - -   char  x_rpn   [LEN_RECD] = "";                                                                                                                                                                                             
     local    create a working/return variable     - - - - - - - - - - - - -   int   x_nrpn  = 0;                                                                                                                                                                                                         

   COND       verify very simple                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     generate rpn                         yRPN_gyges                  "¼xy"                                                               , &x_rpn, &x_nrpn, LEN_RECD, 0    i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 3) : ¬¬¬åxy´æ                                                                                                                                    
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 3) : ¬¬¬åv,xv,yo,´æ                                                                                                                                                                     
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 3) : ¬¬¬åv,0,xv,1,yo,1,´æ                                                                                                                                                                                             
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 2) : ¬¬¬åx yæ                                                                                                                                                                       
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 2) : ¬¬¬åx yæ                                                                                                                                                                        
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 2) : ¬¬¬åx yæ                                                                                                                                                         
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 2) : ¬¬¬åxyæ                                                                                                                                            
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 3) : ¬¬¬åx´yæ                                                                                                                                          

   COND       verify run with no parens                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     generate rpn                         yRPN_gyges                  "¼÷rÆxy"                                                            , &x_rpn, &x_nrpn, LEN_RECD, 0    i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 8) : ¬¬¬å÷rÆ´x´y´æ                                                                                                                                    
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 8) : ¬¬¬åv,÷v,ro,Æo,´v,xo,´v,yo,´æ                                                                                                                                                                     
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 8) : ¬¬¬åv,0,÷v,1,ro,2,Æo,1,´v,3,xo,3,´v,4,yo,4,´æ                                                                                                                                                                                             
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 5) : ¬¬¬å÷ r Æ x yæ                                                                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 5) : ¬¬¬å÷ r Æ x yæ                                                                                                                                                                  
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 5) : ¬¬¬å÷ rÆ x yæ                                                                                                                                                    
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 5) : ¬¬¬å÷rÆxyæ                                                                                                                                          
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 8) : ¬¬¬å((÷´(rÆ))´x)´yæ                                                                                                                                          

   COND       verify with parens                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     generate rpn                         yRPN_gyges                  "¼÷¸xy+ò¹k"                                                         , &x_rpn, &x_nrpn, LEN_RECD, 0    i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_shunted"  ,   0                                                                                    s_equal     yRPN shunted( 9) : ¬¬¬å÷xy´ò+´k´æ                                                                                                                                    
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 9) : ¬¬¬åv,÷v,xv,yo,´v,òo,+o,´v,ko,´æ                                                                                                                                                                                                     
     get      ... verify output                    yrpn__unit                  "o_debug"    ,   0                                                                                    s_equal     yRPN debug  ( 9) : ¬¬¬åv,0,÷v,2,xv,3,yo,3,´v,5,òo,4,+o,1,´v,7,ko,7,´æ                                                                                                                                                                                                                                             
     get      ... verify output                    yrpn__unit                  "o_tokens"   ,   0                                                                                    s_equal     yRPN tokens ( 8) : ¬¬¬å÷ ¸ x y + ò ¹ kæ                                                                                                                                                                           
     get      ... verify output                    yrpn__unit                  "o_parsed"   ,   0                                                                                    s_equal     yRPN parsed ( 8) : ¬¬¬å÷ ¸ x y + ò ¹ kæ                                                                                                                                                                            
     get      ... verify output                    yrpn__unit                  "o_pretty"   ,   0                                                                                    s_equal     yRPN pretty ( 8) : ¬¬¬å÷ ¸x y + ò¹ kæ                                                                                                                                                    
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 8) : ¬¬¬å÷¸xy+ò¹kæ                                                                                                                                          
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 9) : ¬¬¬å(÷´((x´y)+ò))´kæ                                                                                                                                          

#   example    = ¸1-t¹ÇxÀ + 3t¸1-t¹ÆxÁ + 3tÆ¸1-t¹xÂ + tÇxÃ

   COND       verify beizer 1/4                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     generate rpn                         yRPN_gyges                  "¼¸1-t¹ÇxÀ"                                                         , &x_rpn, &x_nrpn, LEN_RECD, 0    i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 6) : ¬¬¬åI,1v,to,-o,Çv,xÀo,´æ                                                                                                                                                                                                                                         
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 7) : ¬¬¬å¸1-t¹ÇxÀæ                                                                                                                                                  
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 6) : ¬¬¬å((1-t)Ç)´xÀæ                                                                                                                                          

   COND       verify beizer 2/4                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     generate rpn                         yRPN_gyges                  "¼3t¸1-t¹ÆxÁ"                                                       , &x_rpn, &x_nrpn, LEN_RECD, 0    i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail (10) : ¬¬¬åI,3v,to,´I,1v,to,-o,Æo,´v,xÁo,´æ                                                                                                                                                                                                                                            
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 9) : ¬¬¬å3t¸1-t¹ÆxÁæ                                                                                                                                                          
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  (10) : ¬¬¬å((3´t)´((1-t)Æ))´xÁæ                                                                                                                                   

   COND       verify beizer 3/4                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     generate rpn                         yRPN_gyges                  "¼3tÆ¸1-t¹xÂ"                                                       , &x_rpn, &x_nrpn, LEN_RECD, 0    i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail (10) : ¬¬¬åI,3v,to,Æo,´I,1v,to,-o,´v,xÂo,´æ                                                                                                                                                                                                                                            
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 9) : ¬¬¬å3tÆ¸1-t¹xÂæ                                                                                                                                                          
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  (10) : ¬¬¬å((3´(tÆ))´(1-t))´xÂæ                                                                                                                                   

   COND       verify beizer 4/4                                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     generate rpn                         yRPN_gyges                  "¼tÇxÃ"                                                             , &x_rpn, &x_nrpn, LEN_RECD, 0    i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_detail"   ,   0                                                                                    s_equal     yRPN detail ( 4) : ¬¬¬åv,to,Çv,xÃo,´æ                                                                                                                                                                                                                                                 
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  ( 3) : ¬¬¬åtÇxÃæ                                                                                                                                                      
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  ( 4) : ¬¬¬å(tÇ)´xÃæ                                                                                                                                                     

   COND       verify beizer full (jesus maria de quadalupe !!!)                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     generate rpn                         yRPN_gyges                  "¼¸1-t¹ÇxÀ + 3t¸1-t¹ÆxÁ + 3tÆ¸1-t¹xÂ + tÇxÃ"                        , &x_rpn, &x_nrpn, LEN_RECD, 0    i_equal     0                                                                                                    
     get      ... verify stack                     yrpn__unit                  "stack"      ,   0                                                                                    s_equal     yRPN stack  ( 0) :  0  ´                                                                                    
     get      ... verify output                    yrpn__unit                  "o_mathy"    ,   0                                                                                    s_equal     yRPN mathy  (31) : ¬¬¬å¸1-t¹ÇxÀ+3t¸1-t¹ÆxÁ+3tÆ¸1-t¹xÂ+tÇxÃæ                                                                                                                                                          
     get      ... verify output                    yrpn__unit                  "o_exact"    ,   0                                                                                    s_equal     yRPN exact  (33) : ¬¬¬å(((((1-t)Ç)´xÀ)+(((3´t)´((1-t)Æ))´xÁ))+(((3´(tÆ))´(1-t))´xÂ))+((tÇ)´xÃ)æ                                                                                                                                                  

   COND       clean-up                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((10.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up for testing                  yrpn__unit_end                                                                                                                    i_equal     0                                                                                                    
     code     set the mode to compiler             - - - - - - - - - - - - -   myRPN.lang   = YRPN_CBANG;                                                                                                                                                                                                 



# end-of-file.  done, finito, completare, whimper [Ï´···
